WEBVTT

00:00.050 --> 00:04.520
주피터 연구소에 잘 오셨습니다 제가 가장 좋아하는 곳이죠

00:04.670 --> 00:10.580
주피터 랩이 화면에 등장했을 때 여러분은 아마도 이곳에 도달하게 될 겁니다 루트 디렉터리요

00:10.580 --> 00:12.350
작업한 8주 치가 다 있죠

00:12.380 --> 00:17.150
이미 첫째 주에 다뤘을 수도 있어요 여기서 더블 클릭하면 get이 가능하죠

00:17.150 --> 00:23.450
이제 첫째 주입니다 5일째를 맞아 앞으로 몇 분간 함께해 주세요

00:23.450 --> 00:25.100
HRMH

00:25.100 --> 00:30.830
말씀드렸듯이 제가 준비한 비즈니스 도전은 첫날 이미 만든 걸 기반으로 구축하는

00:30.830 --> 00:36.920
겁니다 회사를 위한 책자를 만드는 거죠 웹을 긁어 회사에 대해 더 많은 걸 알아내 그걸

00:36.920 --> 00:38.900
책자에 사용해서요

00:39.230 --> 00:43.820
혹시 문제가 생기면 저한테 연락 주세요

00:43.820 --> 00:47.690
가능하다면 제가 말하는 동안 이걸 실행하세요

00:47.690 --> 00:49.940
아니면 나중에 다시 와서 살펴보거나요

00:49.940 --> 00:54.710
비법은 print문을 추가하는 겁니다 모든 시점에서 일어나는 일에 대해

00:54.710 --> 00:57.140
자신 있다고 자신을 설득하는 거죠

00:57.140 --> 00:59.120
수입품부터 시작할 거예요

00:59.120 --> 01:04.790
시프트와 엔터를 눌러야 실행할 수 있어요 수입에 문제가 생기면요

01:04.790 --> 01:10.970
가장 그럴듯한 설명은 활성화된 환경에서 실행되고 있지 않다는 거죠

01:10.970 --> 01:14.150
유피터랩은 활성화 환경에서 시작됐어요

01:14.150 --> 01:21.020
Lmm이 프롬프트에 있는지 확인하세요 터미널 창이나 아나콘다 프롬프트에 있는지요

01:21.020 --> 01:26.090
그게 아니라면 그 부분을 다시 시작하고 도움이 필요하면 읽기를 보세요

01:26.120 --> 01:32.630
어떤 상황에서는 파이썬 프로세스를 다시 시작해야 할 수도 있습니다 커널이라고

01:32.630 --> 01:35.600
알려진 이 뒤에 있는 것이죠

01:35.600 --> 01:41.630
커널 메뉴로 가서 커널을 재시작하라고 하면 모든 셀의 출력이 나오죠

01:41.630 --> 01:45.230
이 공책을 다시 시작하면 다시 시작이네요

01:45.260 --> 01:47.150
다시 import를 실행할게요.

01:47.570 --> 01:48.560
좋아요

01:48.590 --> 01:51.200
이제 초기화하고 셋업할게요

01:51.200 --> 01:53.810
.Infile을 로드할 거예요

01:53.810 --> 01:56.930
열쇠가 잘 있는지 확인할게요

01:57.110 --> 01:58.730
저한텐 그래요

01:58.730 --> 02:00.830
당신도 좋아 보였으면 좋겠네요

02:00.830 --> 02:05.000
아니면 문제를 해결하기 위해 노트 앞에 가보세요. HDP의 HDP는

02:05.030 --> 02:10.790
저희는 GPT 4 미니를 모델로 설정했습니다 GPT 4의 저렴한 버전이죠 이 모델도 놀라울

02:10.820 --> 02:12.620
정도로 훌륭할 거예요

02:12.950 --> 02:15.800
자, 이제 눈에 익죠?

02:15.800 --> 02:20.900
옆 칸에는 우리가 첫 주에 만든 클래스 웹사이트가 있어요

02:20.900 --> 02:23.660
이제 비트를 좀 더 자세히 살펴보죠

02:23.660 --> 02:26.120
두 번째 갖고 노는 거잖아요

02:26.120 --> 02:31.550
URL 전달로 생성되는 클래스라는 걸 기억하실 거예요

02:31.550 --> 02:37.100
URL 검색을 위해 요청 패키지를 사용하죠

02:37.400 --> 02:44.570
그리고 콘텐츠를 수집합니다 그리고 뷰티풀 소우프를 이용합니다 훌륭한 파싱 패키지를 이용해서 파싱을 하죠

02:44.600 --> 02:46.520
뭔가 달라요

02:46.520 --> 02:52.880
제목과 내용을 분석하고 필요 없는 건 제거할 뿐 아니라 이 페이지에서

02:52.910 --> 03:02.450
참조되는 모든 링크도 모아요 셀프.링크스라는 곳에서 그런 링크들을 모아요

03:02.450 --> 03:06.170
모든 링크를 여기에 저장할 거예요

03:07.310 --> 03:15.560
여기 이 줄에 대해 말하자면 AST 01 프리뷰를 봤기 때문에 아, 아니에요

03:15.590 --> 03:21.590
죄송합니다 GPT 4에 캔버스와 함께 설명해 달라고 요청했어요

03:21.590 --> 03:24.320
이제 아주 익숙해지셨을 거예요

03:25.010 --> 03:30.080
그리고 getcontent라는 메서드가 있는데 이 웹 페이지가 하는 일을 설명해줄

03:30.110 --> 03:30.920
거예요

03:30.920 --> 03:32.330
실행해 보죠

03:32.330 --> 03:38.210
이제 편집기 전에 했던 걸 다시 해보죠 웹사이트

03:41.450 --> 03:42.110
에드워드 더넘요

03:42.110 --> 03:46.700
제 멋진 웹사이트에 연락하세요

03:46.730 --> 03:49.670
아주 단순하지만 우리에겐 좋은 시험이죠

03:49.670 --> 03:55.460
print- ad. get 콘텐츠라고 입력하죠

03:55.640 --> 04:00.680
지난번엔 제목과 몸만 인쇄했잖아요

04:00.770 --> 04:02.150
get get을 해 보죠

04:02.150 --> 04:03.230
이제 그렇게 하죠

04:03.230 --> 04:07.940
Get it의 제목과 차체를 얻었어요

04:07.940 --> 04:10.460
다른 것도 잡히면 좋겠네요 Get up

04:10.640 --> 04:14.430
Get it, get it, get get it, get it, get, get, get, get, it, it

04:14.460 --> 04:18.900
Getcontentents의 일부로 제목과 내용 전부를 긴 문자열에 담았어요

04:18.900 --> 04:25.350
여기서 또 살펴볼 것은 Editor. links가 무엇인가 하는 건데요

04:25.860 --> 04:27.870
뭐가 있나 보죠

04:28.920 --> 04:36.510
이제 이 링크 변수에 이제 모든 링크가 있는 걸 보실 수 있습니다 제 웹 페이지에서 찾으실

04:36.540 --> 04:37.320
수 있죠

04:37.440 --> 04:39.720
프린트가 없으면 더 쉬울 것 같아요

04:39.750 --> 04:41.310
이렇게 하면 돼요

04:41.340 --> 04:42.510
Get up 목록에 올릴게요

04:42.510 --> 04:43.620
그게 더 쉽죠?

04:43.650 --> 04:44.730
저기 있네요

04:44.760 --> 04:47.430
제 웹페이지에서 찾을 수 있는 링크들이에요

04:47.430 --> 04:49.800
이 변수 링크에 저장되고 있어요

04:49.830 --> 04:51.750
잘 아셨길 바라요

04:52.200 --> 04:53.220
좋아요

04:53.250 --> 05:00.030
회사 브로슈어를 제작하는데 웹페이지를 제공하고 싶고 그걸 이용해 정보를

05:00.030 --> 05:06.690
더 모으고 싶다면 이런 링크를 따라가서 어떻게 가능한지 알아내야죠

05:06.720 --> 05:08.400
정보를 더 수집할 수 있어요

05:08.400 --> 05:11.250
하지만 모든 링크가 관련 있는 건 아니에요

05:11.250 --> 05:15.120
이 링크들 중 일부는 주의를 끄는 것일 수 있습니다. 여기 이것처럼요. 아마 포함되어

05:15.120 --> 05:17.950
있는 분석 태그 중 하나에서 나온 것일 거예요.

05:17.950 --> 05:23.140
아니면 관련 없는 다른 것들도 있어요

05:23.170 --> 05:30.100
이제 코드를 작성하는 게 정말 어려워지겠네요 판매 책자 생성에 링크가

05:30.100 --> 05:33.220
관련 있는지 알아보기 위해서요

05:33.220 --> 05:34.930
정말 어렵네요

05:34.960 --> 05:40.960
또 다른 방법은 슬래시 어바웃 같은 것에 링크를 걸고 전체 URL로

05:40.960 --> 05:43.090
바꾸는 거예요

05:43.090 --> 05:47.800
코드로 하면 더 쉬울지 몰라도 결코 간단한 작업은 아니에요

05:47.800 --> 05:53.680
어떤 링크가 관련 있는지 알아내기 위한 코드죠 호스트를 포함해

05:53.710 --> 05:56.290
전체 URL 말이에요

05:56.290 --> 06:01.600
코딩이 엄청 많겠지만 GPT for 미니가 아주 잘 할

06:01.810 --> 06:04.240
수 있는 작업인 것 같아요

06:04.240 --> 06:06.760
그걸 작업으로 요청할 수 있어요

06:06.760 --> 06:12.100
미묘하고 복잡한 작업을 손으로 코드화하는 대신

06:12.100 --> 06:17.650
프론티어 모델로 보내 작업을 지시하는 거죠 다음 비디오에서

06:17.650 --> 06:20.350
할 거예요

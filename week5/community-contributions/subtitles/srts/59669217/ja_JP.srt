WEBVTT

00:00.530 --> 00:04.220
そして､ データを視覚化する次のパートへようこそ｡ 

00:04.220 --> 00:06.500
そして､ 3Dでお見せするために､ とても素早く｡ 

00:06.530 --> 00:12.350
私のボックスは､ 私が再起動し､ その巨大なプロットを取り除くまでなんとか生き延びた｡ 

00:12.380 --> 00:16.250
私の轍を踏まなかったことを願うよ｡ 

00:16.280 --> 00:28.250
とにかく､ 今一度3Dで視覚化することで､ テキストをベクターで埋め込むことの意味を理解することができる｡

00:28.490 --> 00:34.070
今回は､ つまらないことも含めて､ よりリーズナブルな1万円にこだわった｡ 

00:34.070 --> 00:43.250
コードは以前ラグを見たときと同じで､ 再びPlotlyライブラリを使って散布図を作成する｡

00:43.250 --> 00:47.660
そして､ 3Dビジュアライゼーションではこのように見える｡ 

00:47.690 --> 00:52.160
ズームインしたりズームアウトしたりするのを止めるのは難しいんだけどね｡ 

00:52.280 --> 00:58.700
先ほどと同じように､ もっと小さなベクトルデータ空間を見ると､ このように遠くから見ると､

00:58.700 --> 01:02.780
ちょっと､ うーん､ 変に見える｡

01:02.780 --> 01:10.340
しかし､ それを回転させ､ 相互作用させると､ 3Dを理解するようになり､

01:10.340 --> 01:17.900
関連する種類の製品を表すクラスタがあることがわかるようになる｡

01:17.930 --> 01:20.060
そして､ 実際に以前使ったコードをコピーすることができる｡ 

01:20.060 --> 01:22.940
希望すれば､ それぞれのテキストを印刷することができる｡ 

01:22.940 --> 01:25.790
またメモリを使うことになるが､ それはできる｡ 

01:25.940 --> 01:31.760
そして､ データがこのように表現されていること､ 似たようなものが近くにあることを納得させる､

01:31.760 --> 01:33.440
とてもクールな方法だ｡

01:33.440 --> 01:35.810
これが重要なポイントだ｡ 

01:35.810 --> 01:42.350
そして､ 紫色の点が主流から外れたとき､ その理由がわかるだろう｡

01:42.380 --> 01:44.150
そうすることは本当に役に立つ｡ 

01:44.150 --> 01:54.050
これはまた､ 直感を養うための練習というより､ もっと大きな問題､ もっと大きな数のドキュメントに拡大しても､

01:54.050 --> 02:03.860
同じルールが適用され､ 同じようにデータを視覚化して実験できることを確認するためのものだ｡

02:04.160 --> 02:07.280
ベクトル・データストアについての前置きはかなり十分だ｡ 

02:07.280 --> 02:13.010
似たような製品を使って製品価格を見積もるラグ・パイプラインを実際に構築する時が来たのだ｡ 

02:13.010 --> 02:14.240
さっそく始めよう｡ 

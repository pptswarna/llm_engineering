WEBVTT

00:00.560 --> 00:04.880
전통적인 머신 러닝을 배우는 동안 절 참아주셔서 감사해요

00:04.880 --> 00:08.990
저희에게 유용했던 것 같아요 너무 불쾌하지 않으셨으면 해요

00:09.020 --> 00:14.330
저처럼 비트도 즐기면서 직접 모델을 만들어 보기도 했죠

00:14.360 --> 00:17.690
나란히 있는 모습을 보시죠

00:17.690 --> 00:27.320
무작위 모델로 시작했는데 현실에서 341달러나 차이가 나더군요

00:27.320 --> 00:34.220
그리고 지속적인 모델을 썼는데 훨씬 잘 나왔지만 여전히 146달러가 모자랐어요

00:34.520 --> 00:40.520
그런 다음 제대로 된 모델을 만들었죠 특징과 선형 회귀 모델요

00:40.550 --> 00:49.370
139달러로 훨씬 더 벌었죠 단어 봉지 모델 카운트베이터라이저와 114달러로요

00:50.150 --> 00:56.570
조금 실망스러웠던 건 강렬한 단어 2개를 겹쳤을 때 115달러가 나왔다는 거예요

00:56.570 --> 01:02.480
두 벡이라는 단어의 400차원이란 걸 아셨을 겁니다 단어 모델에는 1,000차원이

01:02.480 --> 01:07.000
있지만 그래도 두 벡이라는 단어의 400차원은 너무 과하다고

01:07.030 --> 01:09.490
생각하실 거예요

01:09.520 --> 01:14.830
그런 벡터에는 훨씬 더 많은 신호가 있어서 더 나은 결과를 기대할 수 있죠

01:14.830 --> 01:18.070
그래서 좀 실망스러웠지만 비트를 빠르게 메꿨죠

01:18.100 --> 01:24.700
우선 지원 벡터 머신을 사용할 때 조금 더 나아집니다 그런데 임의의

01:24.700 --> 01:29.980
숲이 97달러짜리 오류로 문제를 해결하죠

01:29.980 --> 01:35.410
97달러가 여전히 실망스럽다는 의견도 있어요

01:35.410 --> 01:40.510
제품 가격을 예측한 것만으로도요

01:40.510 --> 01:41.920
하지만 이건 말씀드리죠

01:41.920 --> 01:47.860
직접 가서 제품을 골라 보고 맹목적으로 가격을 매겨 보세요

01:47.860 --> 01:49.120
쉽지 않아요

01:49.120 --> 01:50.890
의외로 어렵네요

01:50.890 --> 01:55.360
LED 라이트가 나왔을 때 보셨었죠 조금 전에 본 예제인데요

01:55.390 --> 02:00.820
제가 그걸 봤는지는 모르겠지만 40달러 정도라고 생각했을 거예요

02:00.820 --> 02:02.500
200달러 정도였어요

02:02.500 --> 02:09.270
그래서 사실 묘사를 하는 것만으로 이해하기가 정말 어려워요

02:09.270 --> 02:11.160
여긴 몇 등급이에요?

02:11.250 --> 02:19.320
전자 제품일 수도 있고 전자제품일 수도 있고 다른 제품일 수도 있지만

02:19.350 --> 02:23.970
97달러 이내로 좁히는 건 우리가 고른

02:23.970 --> 02:28.290
모든 분야에서 쉽지 않아요

02:28.290 --> 02:35.610
테스트 세트에서 평균 97달러 이내로 들어온 건 나쁘지 않아요

02:35.610 --> 02:36.810
나쁘지 않네요

02:36.840 --> 02:39.210
하지만 더 잘할 수 있어요

02:39.210 --> 02:40.320
두고 봐야죠

02:40.590 --> 02:41.550
좋아요

02:41.550 --> 02:44.520
여기까지 오느라 고생했어요

02:44.520 --> 02:46.590
정말 즐거운 시간이었어요

02:46.590 --> 02:47.220
어쨌든요

02:47.520 --> 02:51.660
저를 참아주셨는데 괜찮으셨길 바라요

02:51.720 --> 02:57.330
하지만 걱정 마세요 우리가 변방으로 갈 때가 왔어요

02:57.330 --> 03:04.980
다음에 프론티어 모델을 이용해 상업적 문제를 해결할 때는

03:04.980 --> 03:12.430
GPT 4 미니와 함께 달리면서 성능을 확인해 보죠

03:12.460 --> 03:14.140
그리고 용기를 낼 거예요

03:14.170 --> 03:21.040
목표를 높게 잡고 이 거대한 GPT 40 맥시와 데이터 집합을

03:21.040 --> 03:27.610
시험할 겁니다 8월에 출시된 풀 버전 프런티어 버전이죠

03:27.820 --> 03:30.790
우리에겐 큰 시험이 될 거예요

03:30.790 --> 03:32.080
어떻게 될지 봐야죠

03:32.380 --> 03:38.380
기억하셔야 할 것은 LLM에게는 꽤나 어려운 일입니다 왜냐하면 우리는 기본적으로 어떤 훈련 데이터도 제공하지

03:38.380 --> 03:40.060
않을 것이기 때문이죠

03:40.090 --> 03:45.130
훈련 데이터를 제공했던 전통적인 모델과는 달리 테스트 데이터를 LLM에

03:45.130 --> 03:51.520
보낼 겁니다 그리고 세속적인 지식을 바탕으로 얼마나 얻을 수 있다고 생각하나요? 값어치는

03:51.520 --> 03:53.980
얼마나 될까요?

03:53.980 --> 03:56.470
설정하기 쉬운 문제는 아니죠

03:56.470 --> 04:01.480
전통적인 머신 러닝 모델은 여러모로 큰 이점이 있어요 훈련 데이터 집합을 바탕으로

04:01.480 --> 04:03.190
훈련했다는 점이죠

04:03.190 --> 04:08.320
이 개척 시대 모델의 경우 그냥 설명을 해 줄 거예요 가격

04:08.320 --> 04:09.460
같은 거요

04:09.910 --> 04:13.120
다음 영상에서 어떻게 하는지 보죠 get it get it

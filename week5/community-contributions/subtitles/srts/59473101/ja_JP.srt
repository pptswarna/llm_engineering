WEBVTT

00:01.400 --> 00:02.420
お帰りなさい｡ 

00:02.420 --> 00:06.980
そうして約10分後､ あるいは15分後､ 走りは完了した｡ 

00:06.980 --> 00:08.090
なぜそんなことが分かるのか？

00:08.120 --> 00:08.900
いくつかの方法がある｡ 

00:08.900 --> 00:16.910
そのひとつは､ OpenAIからメールをもらったことだ｡ メールにあるように､ 僕のファインチューニングの仕事を教えてくれた｡

00:16.940 --> 00:22.490
"ブラブラブラ "が成功裏に完了し､ 新しいモデル "ブラブラブラ "が誕生した｡ 

00:22.490 --> 00:30.680
このモデルの名前にワープロが含まれていることにお気づきだろう｡

00:30.740 --> 00:32.840
ええと､ どのように機能するかを示しただけだよ｡ 

00:32.840 --> 00:38.390
微調整のための技の名前､ そしてコロン・パーソナル・コロン・プロセッサーで取り組んできたGPT

00:38.390 --> 00:43.850
4ミニバリアントの名前､ そして最後にコードだ｡

00:43.850 --> 00:45.740
これが私のメールだ｡ 

00:45.770 --> 00:48.110
これがJupyterLabだ｡ 

00:48.110 --> 00:50.090
ええと､ これは僕らがやっていたことなんだ｡ 

00:50.180 --> 00:59.240
そして今､ ステータスの最後の10個のメッセージを見ている｡

00:59.390 --> 01:01.940
じゃあ､ 最後の5つのステップだ｡ 

01:01.940 --> 01:04.110
モデルを微調整｡ 

01:04.140 --> 01:08.070
有効にする前に､ 当社の使用ポリシーに照らしてモデルを評価する｡ 

01:08.070 --> 01:11.040
それが､ 私があなたに言ったことだ｡ 

01:11.250 --> 01:17.340
ええと､ その後､ 使用ポリシーが完了し､ 仕事は正常に完了しました｡ 

01:17.340 --> 01:24.960
そして､ それがどのように見えるか､ ウェイトとバイアスでお見せしようということだ｡ 

01:24.960 --> 01:27.690
これが最終的なウェイトとバイアスのチャートである｡ 

01:27.840 --> 01:33.870
本当に重要なのは､ トレーニングの損失と検証の損失であることがおわかりいただけると思います｡ もちろん､ 検証の損失は､

01:33.870 --> 01:40.470
トレーニングの損失が計算されたときほど定期的に発生していないか､ 発生していないことがおわかりいただけると思います｡

01:40.710 --> 01:46.530
というのも､ 1エポックしか行っていないため､ トレーニングデータはすべて新しいものだからだ｡

01:46.530 --> 01:54.000
つまり､ トレーニングロスも､ 検証ロスも､ 常に同じセットで計算されるので､ 我々にとって有用なのだ｡

01:54.030 --> 01:57.960
特にトレンドの見極めに役立つ｡ 

01:58.080 --> 02:04.500
検証の結果､ 一見したところ､ あまりトレンドがないように見える｡

02:04.500 --> 02:05.520
これを持ち出すことはできる｡ 

02:05.520 --> 02:08.510
このパネルを編集し､ ズームインすることができる｡ 

02:08.510 --> 02:10.940
ここでY軸を変えることができる｡ 

02:10.970 --> 02:12.920
最小値はゼロであるべきだ｡ 

02:12.920 --> 02:15.590
そして､ 最大でも3人くらいにしよう｡ 

02:15.590 --> 02:17.600
だからズームインするんだ｡ 

02:18.620 --> 02:23.240
そして､ 特に改善されているようには見えないことがわかるだろう｡ 

02:23.240 --> 02:32.000
実際､ 望むのであれば､ わずかに増えていると主張することもできるだろう｡ 

02:32.120 --> 02:39.080
ええと､ でも､ このチャートで利用できる平滑化関数が､

02:39.080 --> 02:46.910
必ずしも平滑化されたものだと言えるかどうかはわかりません｡

02:47.450 --> 02:54.080
そうだね､ 確かに上がってはいないけど､ 少し改善されたように見えるし､

02:54.080 --> 02:57.080
その後は横ばいになっている｡

02:57.080 --> 03:00.620
しかし､ 300ポイントまでは改善が見られたようだ｡ 

03:01.100 --> 03:07.150
つまり､ これらはすべて､ あなたが自分自身に目を向け､ もっと時間を費やすためのものなんだ｡ 

03:07.150 --> 03:12.950
しかしこの時点で､ テストデータに対してこのモデルを評価する必要がある｡ 

03:13.340 --> 03:18.260
だから､ それをキックオフして､ それが完了したらビデオに切り替える｡ 

03:18.380 --> 03:20.960
それではJupyter Labに戻ろう｡ 

03:20.960 --> 03:24.020
これが微調整されたモデルだ｡ 

03:24.260 --> 03:29.060
ジョブIDを取得し､ 微調整されたモデルを収集することができます｡ 

03:29.060 --> 03:30.830
では､ その内容を簡単にお見せしよう｡ 

03:30.860 --> 03:47.810
これをお見せすると､ ここに新しい属性のファイン・チューンド・モデルがあり､ メールにあったファイン・チューンド・モデルと同じ名前が含まれていることがわかります｡

03:47.810 --> 03:53.180
メールからコピー＆ペーストすることもできるが､ コードで抜き出すほうがいいだろう｡

03:53.180 --> 03:54.380
だから､ こうする｡ 

03:54.980 --> 04:04.310
ええと､ 私が提案したときにそれが実行されることを示すために､ これを実行すると､ 明らかに同じ名前になります｡

04:05.540 --> 04:07.100
分かった｡ 

04:07.100 --> 04:13.470
だから､ このメッセージの機能をもう一度やり直そう｡ 

04:13.530 --> 04:20.400
ええと､ 今回は､ ええと､ 答えを明らかにしない方を使っているんだ｡ 

04:20.430 --> 04:24.270
もちろん､ そのような情報は与えたくない｡ 

04:24.540 --> 04:29.010
ああ､ それが実際にうまくいくと自分自身を納得させよう｡ 

04:29.400 --> 04:30.960
そうだ｡ 

04:30.990 --> 04:35.280
という疑問が湧く｡ 

04:35.280 --> 04:37.260
価格は明らかにしていない｡ 

04:37.260 --> 04:41.190
そして､ 我々のモデルにとっての課題は､ これを仕上げることだ｡ 

04:41.820 --> 04:48.840
前回､ 我々が持っている効用関数を覚えているだろう｡

04:49.260 --> 04:54.960
ええと､ 前回これをやったとき､ 値段はだいたい99だったと記憶している｡  99歳は､ ブラブラ､ ブラブラだからだ｡ 

04:54.990 --> 04:59.610
そして､ それを実行すれば､ もちろん "get price "関数はそこから価格を取り除くだけだ｡ 

04:59.820 --> 05:01.920
ええと､ よくご存知だと思いますが｡ 

05:02.370 --> 05:10.020
これがこれからテストする関数だ｡ 

05:10.020 --> 05:18.270
GPTの微調整された応答は､ OpenAI ChatGPTの完了を作成し､ 通常のGPTの4つのために､ あなたがそれを呼び出すのと同じように､

05:18.270 --> 05:20.010
それを呼び出します｡

05:20.040 --> 05:21.570
ああ､ 同じAPIだ｡ 

05:21.600 --> 05:22.470
その通りだ｡ 

05:22.470 --> 05:27.000
たった一つの違い､ ほんの小さな違い､ 微細な違いだ｡ 

05:27.030 --> 05:30.330
GPT4ミニではパスしない｡ 

05:30.360 --> 05:38.850
この名前をOpenAIに送ります｡

05:38.850 --> 05:44.160
そして､ それが微調整されたバージョンを使いたいことを意味することを自動的に認識する｡ 

05:44.670 --> 05:47.430
私たちは返事を撤回し､ 代金を受け取る｡ 

05:49.080 --> 05:51.510
では､ 1つだけ例をプリントしてみよう｡ 

05:51.510 --> 06:01.380
テストセットの最初のもの､ つまり200ドルもするものと､ 意表を突かれたものをプリントしてみよう｡

06:01.380 --> 06:04.620
そして､ GPTを初めて微調整したと呼ぶことにする｡ 

06:04.620 --> 06:06.480
結果をひとつ見てみよう｡ 

06:07.410 --> 06:12.780
そう､ つまり､ さっきの数字はトレーニングの値段なんだ｡ 

06:12.780 --> 06:15.120
これは最初のテスト品の価格である｡ 

06:15.280 --> 06:18.010
では､ 最初のテスト項目を見てみよう｡ 

06:19.120 --> 06:19.330
だから

06:24.880 --> 06:26.620
見てみよう｡ 

06:26.710 --> 06:32.290
フォード用のACコンプレッサー修理キットです｡ 

06:32.290 --> 06:42.130
そして､ これは僕自身がやらなければならなかったことなんだけど､ そう､ 明らかに最初のデータポイントについてはあまりいい仕事をしていない｡

06:42.130 --> 06:48.490
重要なのは､ ロット全体でそれを行うことであり､ 少なくとも私たちがすべてのテストで一貫して使用してきた250本である｡

06:48.490 --> 06:53.410
では､ さっそく実行してみよう｡ 

06:53.410 --> 06:58.540
だから､ 最初の2､ 3回は少し赤く見え､ その後少し良くなって緑になるが､

06:58.540 --> 07:00.160
その後は赤一色だ｡

07:00.160 --> 07:04.630
そのため､ いくつかの結果が混在している｡ 

07:05.440 --> 07:11.470
この時点で､ 私は250人のためにあなたを吊るし上げるつもりはない｡ 

07:11.470 --> 07:13.150
私は一時停止する｡ 

07:13.150 --> 07:16.510
そして次のビデオで結果を明らかにする｡ 

07:16.510 --> 07:17.770
そこで会おう｡ 

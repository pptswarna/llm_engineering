WEBVTT

00:00.080 --> 00:07.220
第1週が終わり､ 充実したエキサイティングなプロジェクトを終えた今､

00:07.250 --> 00:09.980
素晴らしい結果だ｡

00:10.010 --> 00:12.350
もちろん､ あなたにはいくつかの課題がある｡ 

00:12.350 --> 00:14.000
ここからが面白くなる｡ 

00:14.030 --> 00:20.990
まず､ このプロジェクトをより良いものにするためにできること､ つまり､ 先ほど申し上げたことと同じようなことがあります｡

00:20.990 --> 00:29.180
そしてそのあとには､ ゼロから何かを作り上げるという宿題が出される｡

00:29.180 --> 00:34.610
もちろん､ 準備ができたら解決策を提示する｡

00:34.610 --> 00:36.230
まずは課題から｡ 

00:36.230 --> 00:44.600
まず第一に､ 私たちがパンフレット・メーカーを作ったとき､ もちろんLMSへの2つの呼び出しがありました｡

00:44.600 --> 00:51.830
最初の呼び出しは､ 一発プロンプトと表現した｡

00:51.860 --> 01:00.110
そして､ マルチショット・プロンプティングという表現があることは前にも述べた｡

01:00.110 --> 01:06.350
だから､ マルチショット・プロンプトができるように拡張して､ 本当のマルチショット・プロンプトにしてほしいんだ｡

01:06.350 --> 01:12.770
このリンクを見せたら､ こう答えてJSONを渡し､ 関連するリンクだけを選択し､

01:12.770 --> 01:21.650
どのようにパスを完全修飾したかを明確に示すのだ｡

01:21.650 --> 01:22.880
だから､ そうしてみてほしい｡ 

01:22.880 --> 01:29.090
マルチショット・プロンプトを使うことになるので､ もう1つか2つの例を入れてください｡ 

01:29.090 --> 01:31.610
そして､ マルチショット・プロンプトを行ったことを履歴書に書き加えることができる｡ 

01:31.640 --> 01:36.920
もちろん冗談だが､ しかし､ やってみることは重要なスキルだ｡ 

01:36.920 --> 01:44.900
しかし､ これが有用なのは､ そうすることでLLMへのコールの質と信頼性が向上するからだ｡

01:44.930 --> 01:56.480
プロンプトにさらにあーだこーだと例を加えることで､ 次のトークンを確実に予測し､ 何を予測させたいかを予測する能力が強化される｡

01:56.480 --> 01:58.940
だから､ これはいい練習になる｡ 

01:58.940 --> 02:03.500
このLLMコールに､ より堅牢性を加える良い方法だ｡ 

02:03.500 --> 02:05.690
そして､ それはコースに沿って行うことだ｡ 

02:05.690 --> 02:08.810
そしてそれは､ あなた自身のプロジェクトに取り入れたくなるものだ｡ 

02:08.810 --> 02:13.570
だから､ ぜひ試してみてほしい｡ 

02:14.560 --> 02:20.050
コースの終盤では､ 構造化されたアウトプットというテクニックを使うことにも触れた｡

02:20.050 --> 02:23.620
そうすることで､ LLMは特殊な対応をせざるを得なくなる｡ 

02:23.620 --> 02:31.330
でも､ マルチショット・プロンプトは､ あなたが探しているものに対して､ 特別な文脈､ 特別な味わいを与えてくれる｡

02:32.050 --> 02:37.000
それから､ パンフレットを作るために2回目の電話でできること｡ 

02:37.000 --> 02:41.740
もちろん､ システムのプロンプトを使って､ 皮肉や皮肉を言うようにすることについては､ すでに話した｡

02:41.740 --> 02:48.010
また､ システム・プロンプトを使って､ スペイン語など別の言語で何かを生成させることができることは述べた｡

02:48.010 --> 02:53.290
そこでできることはもう一つあって､ それはもっと､ 確かにもっと面白いかもしれない｡ 

02:53.290 --> 02:55.450
それで良い結果が得られるかどうかは分からない｡ 

02:55.450 --> 03:00.880
そして､ それは英語でパンフレットを作成し､ 2度目の電話をかけることだ｡ 

03:01.030 --> 03:08.080
実際には､ もちろん､ パンフレットを英語からスペイン語に翻訳するために､ LLMに3度目の電話をしている｡ 

03:08.140 --> 03:14.710
でも､ いろんな意味で､ この場合､ その方がいいということはないだろう｡

03:14.710 --> 03:20.080
しかし､ それを実践することで､ 実際に翻訳の目的のために特別に訓練されたモデルを使用することが想像できます｡

03:20.080 --> 03:36.730
そうすれば､ その目的のためだけにそのモデルを使用することができ､ パンフレット生成のために訓練されたモデルと翻訳のために訓練された別のモデルを使用して､ より良い結果を確実に得ることができるようになります｡

03:36.730 --> 03:45.970
GPT4かミニを両方の目的で使うことになるだろうが､ 複数のコールを実際に体験することができる｡

03:45.970 --> 03:50.350
繰り返しになるが､ これは基本的にエージェントAIのミニチュア実装だ｡ 

03:50.380 --> 03:58.210
システム・プロンプトを使えば､ 1 in 1のbashで全部できるかもしれないが｡

03:58.360 --> 04:00.370
とにかく､ それがやるべきことだ｡ 

04:00.370 --> 04:12.970
これは､ あなたの自信と､ この種のテクニックの経験値を高めるのに大いに役立つだろう｡

04:12.970 --> 04:18.130
そして､ ゼロから何かを作り上げる練習をしてもらいます｡ 

04:18.130 --> 04:22.030
それをお見せするために､ 次のビデオでJupyterLabに戻ります｡ 

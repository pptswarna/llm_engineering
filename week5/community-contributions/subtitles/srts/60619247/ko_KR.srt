WEBVTT

00:00.110 --> 00:04.970
GPT와 시간을 더 보내면서 몇 가지 흥미로운 걸 시도할 거예요

00:04.970 --> 00:09.470
초기 버전의 GPT에서 자주 받던 질문으로 시작할게요

00:09.500 --> 00:15.170
GPT 2가 한계를 보여준 것 같아요 여전히 문제가 있는지 두고 봐야죠

00:15.170 --> 00:18.830
다들 무지개가 몇 개냐고 물었죠

00:20.840 --> 00:21.530
흥미롭죠?

00:21.530 --> 00:29.960
하와이에서 17개까지 뛰려면 무지개가 몇 개 필요할까요?

00:30.110 --> 00:31.610
흥미로운 질문이네요

00:31.610 --> 00:37.550
GPT 2의 반응은 아주 단호했어요 하와이에서 17로 가려면 무지개가 세

00:37.550 --> 00:41.360
개여야 한다는데 질문의 뉘앙스를 놓치고 있죠

00:41.660 --> 00:45.200
GPT 4에는 그런 문제가 없어요

00:45.200 --> 00:45.590
두고 봐요

00:45.590 --> 00:53.150
재치 있고 재밌는 리액션을 보내 주는데 무지개 이모티콘도 같이 보내 줘요

00:53.390 --> 00:54.710
정말 놀라워요

00:55.070 --> 01:00.680
이런 속임수를 다루기가 아주 쉬워요 GPT 4O는 O는 옴니의

01:00.710 --> 01:04.520
약자인데 멀티모달을 나타내죠

01:04.520 --> 01:09.560
물론 이미지 생성을 요청할 수도 있죠

01:11.420 --> 01:16.790
이런 건 다들 본 적 있겠지만 생각해 보면 재미있어요 몇

01:16.790 --> 01:22.970
년 전만 해도 상상력과 창의력을 발휘할 수 있는 LLM이 가능할지

01:22.970 --> 01:29.090
논의가 많았거든요 그런데 이제는 이런 결론이 나올 것 같아요

01:29.090 --> 01:36.380
하와이의 놀라운 사진을 만들 수 있다고요 무지개 17개가 저기로 가고

01:36.380 --> 01:38.360
있어요

01:38.390 --> 01:41.750
솔직히 정말 놀라워요

01:41.780 --> 01:43.190
정말 놀라워요

01:43.400 --> 01:47.390
그 자체로도 설명이 돼요

01:47.390 --> 01:52.100
이런 창의적인 과제에 아주 효과적이에요

01:52.490 --> 01:57.920
그럼 이쯤에서 GPT 4를 캔버스로 시험해 보죠

01:58.100 --> 02:00.920
GPT의 또 다른 새로운 기능인데요

02:01.400 --> 02:07.100
오픈AI와 협업할 수 있는 좋은 기회죠

02:07.190 --> 02:13.080
파이썬 으로 돌아가서, 제가 전에 질문했던 것인데요

02:13.080 --> 02:23.820
캔버스를 이용해 이 코드를 작업한다고 해보죠

02:25.410 --> 02:25.680
네

02:25.680 --> 02:26.160
어디 보죠

02:26.190 --> 02:26.760
항복해요

02:26.760 --> 02:30.570
지금부터는 안 될 일을 할 거예요

02:30.600 --> 02:31.920
비트를 좀 바꿀게요

02:31.950 --> 02:42.780
책에서 작가로 책 인 북을 get get 명령에서 목록해독을 사용하세요

02:42.780 --> 02:46.410
책이 뭔지, 이게 무슨 의미인지 설명하진 않겠어요

02:46.410 --> 02:50.070
코드 한 줄을 주고 어떻게 되는지 볼게요

02:50.070 --> 02:51.870
이제 어떻게 되는지 보죠

02:51.870 --> 02:57.540
먼저 오른쪽에 보이는 캔버스가 열립니다 이 코드에 반복할

02:57.540 --> 03:00.210
수 있는 기능을 주죠

03:00.480 --> 03:01.740
네

03:01.770 --> 03:02.910
저기 있네요

03:03.060 --> 03:05.730
코드가 뜨는데요

03:05.760 --> 03:17.420
이걸 확장해 이게 사용된 예제를 보여주세요 이제 일종의 커서가 이동하는 걸 보실 수 있습니다

03:17.420 --> 03:24.560
우리가 갖고 있던 걸 다시 쓰고 꾸미고 풍성하게 하죠

03:24.560 --> 03:27.920
그 코드 조각이 이제 발전기로 바뀌었어요

03:27.920 --> 03:30.140
예제를 제공하는 데이터가 있어요

03:30.140 --> 03:36.260
책의 제목과 저자가 정해져 있다고 알고 있는데 시험 삼아 보여드린

03:36.380 --> 03:37.370
거예요

03:37.370 --> 03:41.120
대본을 다시 쓰는 게 아주 효과적이었어요

03:41.120 --> 03:58.430
이제 코드를 수정하라고 하죠 저자가 없거나 빈 책은 생성기에서 제외되도록요

04:00.410 --> 04:04.220
비즈니스 요구 사항 같은 걸 상상해 보세요

04:04.340 --> 04:10.310
저기 보이는 건 제가 갖고 있던 코드와 아주 유사해 보이죠

04:10.310 --> 04:16.820
빈 책과 빠진 책이 있는 예시를 더 보여주더니 이 줄을 다시

04:16.820 --> 04:17.810
썼어요

04:17.810 --> 04:24.220
정말 좋은 방법이에요 우리가 전에 했던 것에 상호작용적으로 추가할 수 있으니까요

04:24.250 --> 04:36.220
이걸 업데이트해 달라고 하죠 독특한 작가들만 나오게요

04:36.250 --> 04:38.380
제가 말을 좀 막 했어요

04:38.380 --> 04:42.100
업데이트 하고 싶은 것도 말 안 했어요

04:42.100 --> 04:47.470
이제 다 됐어요 제 역할을 다했죠

04:47.500 --> 04:53.770
다른 예제에 같은 작성자로 추가됐어요 이 코드를 업데이트해서 세트를

04:53.800 --> 04:59.350
이용해 뭐가 나왔는지 추적하고 고유한 케이스만 제공하죠

04:59.380 --> 05:03.490
사실 이게 제가 생각했던 것보다 더 나은 해결책 같아요

05:03.490 --> 05:05.020
하지만 더 길어요

05:05.140 --> 05:09.190
하지만 그렇게 하는 게 나은 이유는 여러 가지가 있겠지만 get이

05:09.190 --> 05:10.720
가능한지 보죠

05:10.720 --> 05:22.360
이걸 더 간단하게 다시 쓰려면 생산자 생성기를 다시 쓸 수 있을까요?

05:22.780 --> 05:24.310
간단히 말하자면요

05:25.030 --> 05:31.050
단순화하기 위해 시도해 보도록 하죠

05:31.140 --> 05:32.100
통과해요

05:32.100 --> 05:34.200
그건 변하지 않아요

05:34.200 --> 05:36.330
다 됐어요

05:38.220 --> 05:46.080
다시 말씀드리지만 이전 슬라이드에서 보여드린 코드보다 약간 더

05:46.110 --> 05:47.310
나은데요

05:47.310 --> 05:50.310
중괄호를 이용해서 집합을 나타내고요

05:50.400 --> 05:54.750
그냥 저 선에서 양보하라고 할 수도 있었지만 이렇게 하기로 선택됐어요 아주

05:54.750 --> 05:56.190
효과적으로 보이네요

05:56.190 --> 06:03.270
저는 GPT로 작업하는 전체적인 경험에 충격을 받았습니다 상호작용을 할 수 있고

06:03.270 --> 06:08.760
빌드 예시 데이터도 하고 업데이트도 하고 어떻게 되는지 보여

06:08.760 --> 06:10.110
주니까요

06:10.110 --> 06:16.350
아주 강력한 기능이죠 이 코스를 진행하면서 막히는 게 있을 때 꼭 사용하시길

06:16.350 --> 06:20.490
권장합니다 비결은 캔버스를 불러오지 않을 경우

06:20.520 --> 06:27.240
get canvas 사용이라고 하면 여러분이 원하는 도구로 이걸 사용해 설명하고

06:27.270 --> 06:30.960
문제와 아이디어를 해결하죠

WEBVTT

00:01.940 --> 00:03.290
잘 돌아왔어요

00:03.320 --> 00:09.020
GPT 4 미니 결과에 여전히 감동하셨길 바라요

00:09.260 --> 00:19.820
프런티어 모델은 80달러로 큰 인기를 끌었고 조회 수가 52%로 50%를 넘어섰습니다 녹색

00:19.820 --> 00:22.820
점 수와 멋진 차트 덕분이죠

00:22.880 --> 00:29.510
하지만 이제 더 큰 사촌 격인 GPT 4와 겨룰 때가 됐죠

00:29.540 --> 00:31.250
방금 했어요

00:31.280 --> 00:37.520
말씀드리고 싶은 건 이 시점에서 우리가 이런 종류의 오류 숫자에

00:37.520 --> 00:42.020
대해 얘기할 때 오류는 이미 꽤 낮다는 거예요

00:42.050 --> 00:44.810
제품의 실제 가격을 생각해 보세요

00:44.810 --> 00:45.770
다양하죠

00:45.770 --> 00:48.020
가격에 변동이 있어요

00:48.020 --> 00:49.310
세일 중이에요

00:49.340 --> 00:54.170
바퀴나 노트북 가격 같은 건 큰 반전이 있어요

00:54.320 --> 01:02.320
장소와 스토어마다 제각각인 건 분명합니다 그러니 이 질문에는 자연스러운

01:02.320 --> 01:05.380
오류가 내재돼 있죠

01:05.380 --> 01:09.370
그래서 소규모로 줄어들 거라고 기대하진 않아요

01:09.730 --> 01:16.090
그런 관점에서 현재 1달러씩 개선될 때마다 그 자체로 get up

01:16.090 --> 01:17.350
승리예요

01:17.380 --> 01:21.670
가능하면 주스를 짜겠지만 큰 변화는 기대하지 마세요

01:21.670 --> 01:29.110
지금까지의 기술로는 이미 놀라운 수준이에요 기존의 머신 러닝 기술보다

01:29.110 --> 01:30.910
훨씬 앞섰죠

01:31.390 --> 01:41.290
다음 단계는 물론 더 큰 사촌 격인 GPT 4를 공개하는 거죠

01:41.290 --> 01:47.740
여기 같은 형식의 함수가 또 있네요 테스트 프로그램에 통과시킬 함수죠

01:47.890 --> 01:51.790
OpenAI 챗GPT완료 .Create라고 부르고요

01:51.790 --> 01:58.690
8월 6일 기준으로 GPT 4 모델을 사용하고 있어요 아주 최근이죠

01:58.960 --> 02:06.080
메시지를 전달하고 씨앗을 전달하고 같은 방법으로 결과를 얻는 거죠

02:06.110 --> 02:09.590
미리 말씀드리자면 비트가 좀 더 들 거예요

02:09.620 --> 02:14.210
0달러 정도 해요 10달러와 0달러요 250점짜리 시험에 20점요

02:14.450 --> 02:19.160
네, 돈이 많이 들진 않겠지만 100번씩 방송하기 전에

02:19.160 --> 02:21.200
다시 생각해 보세요

02:21.380 --> 02:24.650
그러니까 적어도 한 번은 시도해 보세요

02:24.740 --> 02:26.330
정말 재미있어요

02:26.510 --> 02:30.170
하지만 자주 실행할 필요는 없어요

02:30.200 --> 02:35.390
제가 왜 이걸 O1에 대항해 실행하지 않는지 궁금하실 수도 있어요

02:35.450 --> 02:39.530
오 원의 용도는 이런 문제들이었어요

02:39.560 --> 02:45.560
더 깊이 있는 사고가 필요한 문제입니다 다단계 사고 과정으로 어려운 문제들이죠

02:45.560 --> 02:49.100
그건 우리가 다루는 문제와 맞지 않아요

02:49.160 --> 02:53.090
더 느리고 더 비싸겠죠 아무 이유 없이요

02:53.090 --> 02:56.270
수학 퍼즐을 푸는 게 아니에요

02:56.300 --> 03:02.180
세속적인 지식을 바탕으로 가격을 가장 잘 추측해 보려고요

03:02.330 --> 03:05.750
GPT 4 프런티어가 가장 좋은 기회예요

03:05.870 --> 03:06.110
네

03:06.110 --> 03:08.570
물론 이미 실행해봤죠

03:08.660 --> 03:12.170
GPT 4 미니 비트보다 조금 느린데요

03:12.170 --> 03:13.070
비트 주세요

03:13.100 --> 03:15.740
하지만 직접 운영해 보면 재미있을 거예요

03:15.770 --> 03:18.470
Get it 결과가 나왔어요

03:18.740 --> 03:23.660
녹색도 많고 빨간색도 많아요

03:24.230 --> 03:27.830
꽤 다양하네요

03:28.700 --> 03:33.110
내기하는 거 맞죠?

03:33.110 --> 03:35.000
결과가 나왔어요

03:35.000 --> 03:37.610
결론은 이게 더 낫다는 거죠

03:37.610 --> 03:39.380
확실히 좋아졌네요

03:39.380 --> 03:42.140
80에서 76으로 떨어졌어요

03:42.140 --> 03:44.840
52점부터 58점까지 점수를 올렸죠

03:44.840 --> 03:45.950
초록색 점요

03:45.950 --> 03:47.990
큰 변화는 아니에요

03:47.990 --> 03:53.840
미니에서 4급 GPT로 발전할 거라고 기대하셨겠지만 4급 GPT 미니는 정말 좋은 차예요

03:53.840 --> 04:00.840
훨씬 저렴한 모델임에도 불구하고 GPT 40과 매우 비슷한 스마트함을 갖추고

04:00.870 --> 04:01.380
있죠

04:01.620 --> 04:08.310
우선 축하할 일이 있어요 6달러 4달러 줄었어요

04:08.340 --> 04:08.790
미안해요

04:08.910 --> 04:16.770
하지만 이미 GPT 4 미니는 아주 잘 달리고 있다고 볼 수 있죠

04:17.040 --> 04:19.050
그래서 말인데요

04:19.200 --> 04:22.740
네, 이게 결과예요

04:22.770 --> 04:25.170
시각적으로 아주 인상적이에요

04:25.200 --> 04:28.410
인간적인 것과 비교해 보세요

04:28.440 --> 04:33.180
강의를 마무리하기 전에 부끄럽지만 도표를 다시 한번

04:33.480 --> 04:37.980
보면서 선구자 모델의 성과를 비교해 보도록 하죠

04:38.040 --> 04:41.370
하지만 이걸 보면 감이 오죠

04:41.880 --> 04:42.990
네

04:42.990 --> 04:50.670
그리고 아직 공개하지 않은 개척지 모델이 하나 더 있는데 바로 클로드

04:50.700 --> 04:52.920
3이에요 5 소네트요

04:53.220 --> 05:03.760
인류학에서 가장 강력한 모델이죠 구조도 알아보시겠죠?

05:04.000 --> 05:07.180
클로드 메시지가 다시 만들어요

05:07.180 --> 05:11.500
클로드의 경우에는 씨앗을 전달할 수 없어요

05:11.530 --> 05:12.430
그런 게 아니에요

05:12.430 --> 05:14.500
매번 결과가 다를 거예요

05:14.500 --> 05:20.440
하지만 전 여기서 처음 실행한 걸 사용했어요 그게 우리

05:20.440 --> 05:24.850
목적을 위한 결과로 나올 거예요

05:24.880 --> 05:28.990
이 공책도 복사해서 보관할 거예요

05:28.990 --> 05:30.970
후세를 위해 남겨뒀어요

05:31.270 --> 05:37.780
클로드는 빨강 두어 개로 시작해서 초록 바다를 칠해요

05:40.510 --> 05:45.850
Get in get 결과로 바로 넘어가죠

05:48.160 --> 05:50.260
클로드가 결과를 보냈어요

05:50.290 --> 05:53.440
흥미롭게도 클로드는 더 심한 비트를 입었어요

05:53.560 --> 06:03.990
이번 작업은 GPT 4 미니보다도 못한 것 같아요 랜덤 숲보다도 못한 것 같아요

06:04.020 --> 06:09.300
랜덤 포레스트는 훈련 데이터의 혜택을 많이 받았어요 400,000 훈련 데이터요

06:09.300 --> 06:12.750
아주 색다른 테스트예요

06:13.200 --> 06:21.180
그 이유 중 하나는 이 축을 보면 예측을 할 수 있기 때문이죠

06:21.180 --> 06:27.000
아주 작은 빨간 점이라 잘 보이진 않지만 엄청난 예측을 했어요

06:27.000 --> 06:30.690
물론 모든 곳에 퍼지겠지만요

06:30.690 --> 06:32.730
큰 차이는 없었을 거예요

06:32.730 --> 06:41.670
하지만 그래도 너무 높았을 가능성이 있어요 그래서 결과물이 약간 비뚤어졌을

06:41.670 --> 06:43.320
거예요

06:43.350 --> 06:47.820
여기를 스캔해서 볼 수 있는지 보죠

06:48.000 --> 06:49.950
어디서부터 잘못된 걸까요?

06:49.950 --> 06:51.060
여기 있네요

06:53.550 --> 06:56.940
G테크놀로지 G스피드 ES 프로 고성능이죠

06:56.940 --> 07:02.780
이 기계는 495달러예요 95살요

07:02.780 --> 07:07.250
손님은 4,999달러 99센트였어요

07:07.550 --> 07:14.510
4500 오류를 도입한 건 초대형 게스트였어요

07:14.540 --> 07:18.590
그 오류 자체는 크게 왜곡되지 않아요 250개의 데이터

07:18.590 --> 07:21.020
포인트 평균이 나오니까요

07:21.020 --> 07:26.570
하지만 최악의 캠프로 내몰린 좋은 예죠

07:27.110 --> 07:30.170
클로드가 결과를 보냈어요

07:30.200 --> 07:38.060
여기 도표가 있지만 이번 과제에서는 기대에 못 미쳤어요 프런티어

07:38.060 --> 07:43.790
GPT4가 이번 과제의 우승자였죠

07:43.820 --> 07:50.900
클로드가 코딩 성능 과제에서 우승한 거 기억하시죠? 엄청난 마진을 기록했어요

07:50.960 --> 07:56.150
하지만 이번 게임의 승자는 클로드예요

07:56.480 --> 07:59.730
죄송합니다, GPT 4가 프런티어에 있어요

07:59.730 --> 08:04.620
약속드린 대로 한 번만 더 보고 갈게요

08:04.650 --> 08:07.200
인간의 미약한 시도에 말이죠

08:07.230 --> 08:14.820
GPT 4로 표시된 초록색 점들이 멋진 도표를 보여줍니다 홈런에

08:14.820 --> 08:16.740
가까운 수치죠

08:16.740 --> 08:22.620
이제 이 결과를 방에 있는 사람의 결과와 비교해 보죠

08:22.890 --> 08:26.580
이건 제 차트예요

08:28.800 --> 08:30.600
다시는 보고 싶지 않아요

08:30.840 --> 08:31.860
알았어요

08:31.860 --> 08:36.570
어쨌든, 이게 당신에게 교육적인 경험이 됐길 바라요

08:36.570 --> 08:40.680
본인 사업 문제로 이런 실험을 어떻게 하는지 아시겠죠

08:40.680 --> 08:41.430
그러세요

08:41.460 --> 08:43.200
이제 이걸 따라 해 보세요

08:43.200 --> 08:46.890
이것저것 해 보면 특히 클로드에게서는 씨앗이 없기 때문에 같은

08:46.890 --> 08:48.750
결과를 얻지 못해요 get it

08:48.930 --> 08:53.430
Get it로 색다른 걸 만들어 성능을 보는 거죠

08:53.430 --> 08:55.050
어쩌면 나보다 더 좋은 결과를 낼지도 모르죠 get it get it get it

08:55.230 --> 09:00.060
마무리할 때는 슬라이드를 더 보여드릴게요

WEBVTT

00:00.710 --> 00:03.590
4주 차, 3일째에 잘 오셨어요

00:03.590 --> 00:09.650
또 다른 사업 프로젝트에 착수할 참이거든요 상업적 가치를 더할 프로젝트죠

00:09.680 --> 00:12.260
신나는 프로젝트가 될 거예요

00:12.260 --> 00:17.450
어려운 도전이 될 거예요 하지만 언제나처럼 즐거운 경험이 되겠죠

00:17.480 --> 00:19.250
Get it, Get it, 시작하시죠

00:19.280 --> 00:25.400
먼저, 여러분이 이번에 할 수 있는 모든 것의 요약입니다 여러분이 읽으실 수 있게 해드리죠

00:25.400 --> 00:31.190
하지만 오늘 이후엔 코딩 능력을 위한 모델을 평가하고 코드 생성을 위해 LM을 사용하는

00:31.190 --> 00:36.710
솔루션을 코드 구축하기 위해 개척자 모델을 사용할 수 있게 될 거예요

00:36.710 --> 00:39.710
물론 사용자 인터페이스를 포함하죠

00:39.710 --> 00:45.470
앱으로 잘 패키지하기 위해 많은 비트 조각들을 포함하고 있어요

00:45.920 --> 00:47.810
과제를 다시 알려드릴게요

00:47.810 --> 00:53.660
파이썬 을 C++로 변환하는 툴을 만들고자 합니다 성능을 위해서요

00:53.660 --> 00:57.320
오늘은 개척자 모델 솔루션을 해볼게요

00:57.320 --> 01:04.820
다음엔 오픈 소스 모델을 추가하겠습니다 개척지 폐쇄 소스와 오픈 소스에서 싸우면서

01:04.820 --> 01:07.520
뭐가 이기는지 보죠

01:08.030 --> 01:12.380
먼저, 우리가 할 일에 대해 간단히 설명할게요

01:12.380 --> 01:19.550
모델에 뭘 재구성하길 원하는지 프롬프트할 거예요 파이썬 코드와 C+를요

01:19.550 --> 01:20.390
더 있어요

01:20.420 --> 01:24.320
이것보다 좀 더 장황할 수도 있지만 이런 내용입니다

01:24.350 --> 01:31.430
모델을 설득하는 거죠 어떤 설명도 하지 말고 그냥 C 플러스 플러스 코드를 제공하라고요

01:31.430 --> 01:37.250
그리고 목표는 어떻게 해서든 더 빨리 달리고 같은 출력을 내는 것이어야 하죠

01:37.250 --> 01:40.040
그것만 빼면 세상은 그의 굴이에요

01:40.070 --> 01:44.120
원하는 건 뭐든 할 수 있어요 같은 출력만 주면 되죠

01:44.150 --> 01:49.190
파이썬 을 테스트하기 위해 비트 코드로 시작할게요

01:49.190 --> 01:56.120
이미 아시겠지만 일렬로 나뉘는 숫자가 서서히 하나의 큰 숫자로 모입니다. 일렬은

01:56.120 --> 02:05.270
1 빼기 3분의 1 더하기 5분의 1 빼기 7분의 1 더하기 9분의 1 빼기 11분의 1 이렇게 이어지죠.

02:05.300 --> 02:06.350
Get it, Get it 아시겠죠?

02:06.380 --> 02:12.950
어, 연속성을 유지하면서 4를 곱하면 점차 파이의 수렴이 되죠

02:12.980 --> 02:14.840
하지만 시간이 오래 걸려요

02:14.960 --> 02:21.890
그래서 처음 1억 번 반복할 수 있고 그 시점에서 파이에 꽤 근접하게 되죠 get

02:21.920 --> 02:23.030
it

02:23.150 --> 02:28.670
하지만 1억 개의 반복을 하려면 계산기에 엄청나게 많은 타자를 쳐야 해요

02:28.730 --> 02:30.830
파이썬 을 이용하면 꽤 빠르게 할 수 있어요

02:30.830 --> 02:35.690
C 플러스 모델들이 훨씬 더 빨리 할 수 있길 바라요 프런티어 모델들이 도움될 거예요 Get it, Get it,

02:35.690 --> 02:36.410
Get it

02:36.410 --> 02:37.400
알아보죠

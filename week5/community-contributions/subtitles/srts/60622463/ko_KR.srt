WEBVTT

00:00.020 --> 00:04.280
이 비디오에선 Mac 사용자를 위한 데이터 과학 환경을 설정할 거예요

00:04.280 --> 00:06.110
다음 영상에서는 PC 사용자를 다룰 거예요

00:06.110 --> 00:09.080
PC를 지지하신다면 다음 질문으로 넘어가세요

00:09.080 --> 00:12.200
듣고 싶으면 여기서 들어요 아니면 다음에 봐요

00:12.290 --> 00:16.310
좋아요, 맥 피플이∙∙∙ 저도 맥 피플이에요

00:16.310 --> 00:19.520
전 항상 맥스를 운영해서 여러분이 제 단골이에요

00:19.580 --> 00:21.740
제가 제일 좋아하는 분들이에요

00:21.770 --> 00:24.050
다른 남자들한테도 똑같이 말할 건 아니잖아요

00:24.080 --> 00:24.950
그럴지도 모르죠

00:24.950 --> 00:33.830
깃허브의 LM 엔지니어링 압류 브라우저에 나와 있어요 이 링크가 곳곳에 도배돼

00:33.830 --> 00:39.440
있을 겁니다 이 강의의 강의 노트에도요

00:39.530 --> 00:45.170
여기 와서 깃허브 압류 좀 보세요 우리가 가진 코드를 보시라고요

00:45.170 --> 00:49.520
스크롤을 내리면 리드메 파일의 내용도 보입니다 환경을 설정하기 위해

00:49.520 --> 00:51.890
무엇이 필요한지 표시한 곳이죠

00:51.890 --> 00:57.500
제가 잘했길 바랍니다 모든 걸 단계별로 잘 배치했고 뭔가 잘못되면 어떤 조치를

00:57.530 --> 00:59.750
취할지 명확히 했으니까요

00:59.790 --> 01:04.200
잘 나왔으면 좋겠지만 수정할 부분이 있으면 하세요

01:04.410 --> 01:09.360
이미 그런 분들이 계시니 정말 감사하게 생각해요 저한테 알려 주시면 알려 드릴게요

01:09.390 --> 01:09.960
네

01:09.960 --> 01:13.470
하지만 지금은 이 코드 녹색 버튼을 누르세요

01:13.470 --> 01:16.230
이 둘 중 하나를 고르세요

01:16.260 --> 01:21.990
여기 복사 버튼을 선택하면 이 압류를 식별하는 URL을 클립보드로

01:21.990 --> 01:23.520
복사하죠

01:23.520 --> 01:24.990
다 됐어요

01:25.020 --> 01:25.680
좋아요

01:25.710 --> 01:28.500
이제 터미널 창을 불러오겠습니다 다음에 갈 곳이죠

01:28.500 --> 01:33.030
이것 중 일부는 최대 파인더 창을 이용해 할 수 있어요 그걸 선호한다면요

01:33.120 --> 01:36.930
하지만 전 터미널이 더 편합니다 여러분도 마찬가지겠죠

01:37.170 --> 01:39.300
이제 홈 디렉터리에 들어왔어요

01:39.330 --> 01:45.150
많은 분들이 프로젝트 디렉터리 셋업을 갖고 계실 겁니다 여러분의 프로젝트를 관리하는 곳이죠

01:45.180 --> 01:46.860
지금은 설치가 안 됐어요

01:46.860 --> 01:48.810
CD 프로젝트를 하면 아무것도 없어요

01:48.810 --> 01:53.220
디렉터리 프로젝트를 만들고 들어가 볼게요.

01:53.640 --> 01:54.750
시작할게요

01:55.050 --> 01:59.330
프로젝트 폴더에서 다음으로 할 일은 git 클론을 입력하는

01:59.330 --> 02:05.540
것입니다 압류 깃을 복제하고 압류 깃 이름을 붙여넣습니다 엔터를 누르면 알아서

02:05.540 --> 02:06.770
작동하죠

02:06.770 --> 02:10.670
이제 LM 엔지니어링 폴더가 로컬에 있어요

02:10.700 --> 02:14.000
들어가 보면 모든 코드가 있어요

02:14.150 --> 02:19.580
지금 우리가 있는 LM 엔지니어링 폴더는 프로젝트 루트 디렉터리에

02:19.580 --> 02:22.850
있다고 사람들이 종종 부르는 곳이죠

02:22.970 --> 02:25.940
그게 이 프로젝트의 현재 위치의 이름이에요

02:25.970 --> 02:28.610
프로젝트 루트 디렉터리 LM 엔지니어링이죠

02:28.670 --> 02:29.540
좋아요

02:29.540 --> 02:33.890
다음으로 할 일은 아나콘다 설치예요

02:33.890 --> 02:35.630
처음 설치하는 거라면요

02:35.630 --> 02:42.350
리드미에는 아나콘다의 설치 페이지로 직접 링크가 있어요 Mac OS를 설정할 수

02:42.380 --> 02:44.420
있게 해주죠

02:44.540 --> 02:48.530
구성하는 간단한 화면 모음이 있어요

02:48.530 --> 02:50.270
안 할 거예요 이미 해 봤으니까요

02:50.270 --> 02:54.680
하지만 보시다시피 단계별로 아주 명확해요

02:54.680 --> 03:01.010
그럼 상자에 아나콘다가 붙어 있을 거예요 상자에 아나콘다가 붙어 있을 때요

03:01.010 --> 03:02.750
터미널 창으로 돌아가죠

03:02.750 --> 03:03.560
여기예요

03:03.590 --> 03:09.650
아나콘다에게 데이터 과학 환경을 구축하도록 모든 걸 지시하는 명령을

03:09.650 --> 03:18.080
호출합니다 환경을 위한 콘다 부럽기 때문이죠 생성하기 f는 환경에 대한 완전한 설명이 있는

03:18.080 --> 03:21.260
파일을 지정한다는 뜻이에요

03:21.260 --> 03:26.630
저 파일의 이름은 환경이에요 여기서 볼 수 있는 yml이죠

03:26.630 --> 03:29.630
이 환경을 정의하는 파일이죠

03:29.630 --> 03:32.210
다 됐으면 엔터키를 누르세요

03:32.690 --> 03:41.090
이제 아나콘다가 서버에 연결할 겁니다 우리가 해야 할 일을 모두 알아내죠

03:41.090 --> 03:46.610
해결 환경이라는 걸 합니다 필요한 패키지 각각의 버전이 올바른

03:46.610 --> 03:52.970
버전인지 알아내는 거죠 완전히 호환 가능하고 완전히 지정된 환경이어야

03:52.970 --> 03:55.400
하는 거요

03:55.400 --> 03:58.780
이 모든 게 일어나는 걸 보셨을 거예요

03:58.780 --> 04:05.590
바쁘게 다양한 걸 만들고 다양한 패키지를 다운로드해서 구축했나요?

04:05.620 --> 04:09.400
비트는 시간이 좀 더 걸릴 수도 있어요 전 이미 해봤거든요

04:09.400 --> 04:13.000
처음 다운로드 할 때 로컬에 캐시돼 있어요

04:13.000 --> 04:16.300
저는 인터넷 연결이 잘돼서 5분 정도 걸렸어요

04:16.300 --> 04:21.760
처음 이걸 했을 때 20분 이상 걸린다는 보고를 받았어요

04:21.760 --> 04:25.510
물론 기다릴 시간이 많다는 뜻이죠

04:25.510 --> 04:30.940
그렇게 오래 걸린다면 예상되는 느린 인터넷 연결이 있을

04:30.940 --> 04:31.690
때죠

04:31.690 --> 04:36.370
하지만 20분 이상 걸리는데 인터넷 연결이 잘 된다면 아나콘다에게

04:36.370 --> 04:37.660
문제가 생긴 거죠

04:37.660 --> 04:43.900
명령 C로 취소하고 다른 접근법을 사용합니다 가상 환경

04:43.900 --> 04:45.280
접근법이죠

04:45.550 --> 04:52.540
지금 아나콘다는 트랜잭션을 실행하는 데 한창입니다 기본적으로 필요한 버전의

04:52.660 --> 04:58.090
어떤 것이 필요한지 알아낸 다음 전체 환경을 구축하죠

04:58.090 --> 05:02.560
그리고 이걸 아시는 분들을 위해 제가 설치한 패키지도 있습니다

05:02.590 --> 05:05.980
왜냐하면 아직 콘다 버전이 없거든요

05:06.130 --> 05:09.940
끝에 get이 설치되는 패키지가 있어요

05:09.940 --> 05:14.500
하지만 피프를 설치할 때는 거의 다 끝나가요

05:14.500 --> 05:15.550
거짓말은 안 했어요

05:15.550 --> 05:17.500
오래 걸릴 필요가 없어요

05:17.530 --> 05:21.340
정말 빠르네요 다 끝났어요

05:21.490 --> 05:28.600
새 환경을 활성화해야 합니다 현재 사용 중인 라이브 환경이 되어야

05:28.600 --> 05:30.190
한다는 뜻이죠

05:30.220 --> 05:35.470
지금 제 커서를 보시면 왼쪽에 있는 단어가 보이시죠

05:35.470 --> 05:40.810
그 말은 현재 아나콘다 환경에서 실행되고 있지 않다는 거죠

05:40.810 --> 05:48.010
LM 환경을 사용하기 위해 환경 이름은 LMS입니다 콘다가 LMS를

05:48.130 --> 05:51.460
활성화한다고 입력하죠

05:51.460 --> 05:57.790
아나콘다에게 이 환경에서 파이썬 버전을 실행하고 싶다고 말하는 데 필요한 게 그것뿐인가요?

05:57.790 --> 06:01.150
패키지들도 다 같은 버전이고요?

06:01.150 --> 06:03.580
일관성이 있다는 뜻이죠

06:03.580 --> 06:07.600
즉시 그렇게 됐죠 LMS가 왼쪽에 쓰인 게 보이시죠

06:07.600 --> 06:13.540
그걸 보신다면 그게 성공했다는 단서고 올바른 버전의 아나콘다를 실행하고

06:13.540 --> 06:14.950
있다는 거죠

06:16.180 --> 06:20.800
마지막 단계로 command JupyterLab을 입력할게요

06:20.800 --> 06:26.620
JupyterLab은 명령이에요 JupyterLab이라는 데이터 과학 환경을 실행하고

06:26.620 --> 06:29.830
싶어요 코드와 상호 작용하며 작업할 수 있도록 해주죠

06:29.830 --> 06:35.710
실행하면 잠시 생각하죠 당면한 작업을 고려하는 동안에요

06:35.710 --> 06:39.550
그럼 새로운 화면에서 주피터랩을 시작할 거예요

06:39.550 --> 06:42.850
아마 이런 비트를 보게 될 거예요

06:43.270 --> 06:43.930
좋아요

06:43.930 --> 06:47.380
이것과 함께 잠시 멈출게요

06:47.380 --> 06:53.710
PC 사용자들을 위해 영상을 찍고 두 영상 후에 다시 만나요

06:53.740 --> 06:54.610
거기서 봐요

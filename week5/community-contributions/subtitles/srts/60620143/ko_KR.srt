WEBVTT

00:00.110 --> 00:02.570
GPT 4에 전화를 걸 거예요

00:02.600 --> 00:07.850
링크 세트를 검토하라고 요청하는군요 어떤 게 관련 있는지 알아내고

00:07.850 --> 00:11.000
완전히 자격 있는 링크로 대체하라고요

00:11.270 --> 00:17.660
llm을 사용하는 아주 좋은 방법이 될 겁니다 특히 관련 있는 링크를 선택해야

00:17.660 --> 00:18.740
하니까요

00:18.740 --> 00:21.620
추론 과정이 필요해요

00:21.890 --> 00:27.560
이 목적으로 GPT 4를 사용할 뿐 아니라 JSON 형식으로 응답하도록

00:27.560 --> 00:35.390
요청할 겁니다 우리가 돌려받아야 할 정보를 정확히 지정하는 방식으로요

00:35.420 --> 00:41.660
나중에 구조화 출력이라는 테크닉을 다루겠습니다 LLM이 아주 구체적인

00:41.660 --> 00:45.080
포맷으로 반응하도록 요구하는 경우죠

00:45.110 --> 00:48.950
응답해야 할 포맷을 지정하는 거죠

00:48.980 --> 00:50.300
오늘은 안 돼요

00:50.300 --> 00:52.670
JSON을 요청하는 거죠

00:52.700 --> 00:56.000
회신을 위해 사용해야 하는 포맷을 알려드리죠

00:56.000 --> 00:57.380
멋질 거예요

00:57.410 --> 01:00.590
이렇게 간단한 요청에는 잘 통하죠

01:00.590 --> 01:04.120
IQ가 높아지면 구조적인 출력 작업을 해야 해요 IQ, IQ

01:04.120 --> 01:09.370
8주 차에 에이전틱 인공지능 프레임워크를 만들 때 그걸 할 거예요

01:09.370 --> 01:11.560
하지만 지금은 이게 우리 일이에요

01:11.560 --> 01:14.290
시스템 프롬프트를 생성할게요

01:14.350 --> 01:19.960
시스템 프롬프트에는 당면한 작업과 그 작업 방법을 설명하는 글이 있죠

01:19.960 --> 01:22.570
거기서 정보를 제공할 거예요

01:22.570 --> 01:24.250
시스템 프롬프트예요

01:24.280 --> 01:28.720
웹페이지에 있는 링크 목록을 제공하죠

01:28.720 --> 01:34.810
어떤 링크가 회사 브로슈어에 포함될지 결정할 수 있습니다

01:34.810 --> 01:41.800
회사 페이지나 회사 페이지 직업 페이지 링크 같은 거요

01:41.830 --> 01:46.210
이 예제처럼 JSON에서 응답해야 해요

01:46.210 --> 01:49.150
그리고 예시가 전달되죠

01:49.150 --> 01:54.400
원 샷 프롬프트라고 한 건 특정 예제를 준다는 게 정말 그 뜻이었습니다

01:54.400 --> 02:01.480
어바웃 페이지나 직업 페이지와 함께 사용할 수 있도록요 그 형식을 지정하는 방법은 단순히

02:01.480 --> 02:07.000
예제를 주는 겁니다 사전에 대해 묻는 걸 보실 수 있죠

02:07.030 --> 02:09.880
단일 특성 링크를 갖게 되죠

02:09.880 --> 02:16.570
그 링크는 각각의 형식과 URL을 가진 사전의 목록이 되겠죠

02:16.570 --> 02:19.420
그 URL이 전체 URL이죠

02:19.420 --> 02:21.430
이 방을 운영하게 해줘요

02:21.430 --> 02:27.190
이게 명확한지 확인하기 위해 링크 시스템 프롬프트를 프린트할게요

02:27.190 --> 02:28.840
이제 변수가 생겼어요

02:28.840 --> 02:31.330
그 변수가 포함하는 게 이거죠

02:31.330 --> 02:32.410
인쇄를 했어요

02:32.440 --> 02:34.540
Get it, get it 마차도 다시 가져오죠

02:34.540 --> 02:35.830
이걸 보시죠

02:36.910 --> 02:37.990
여기 있네요

02:38.500 --> 02:44.890
이게 바로 우리가 시스템 프롬프트에서 LLM에게 지시하려는 거죠

02:45.370 --> 02:50.110
이제 함수 get links 사용자 프롬프트를 쓸게요

02:50.110 --> 02:51.400
이렇게 생긴 거예요

02:51.430 --> 02:53.770
웹사이트 객체를 가져가요

02:53.770 --> 02:59.800
여기 블라 웹사이트에 링크 목록이 있다고 할 거예요

03:00.070 --> 03:04.630
해당 회사 브로슈어에 실을 관련 링크를 골라 주세요

03:04.660 --> 03:13.470
URL do 포함 안 함과 포함 안 함 몇 가지로 응답하세요 그런 다음 링크를

03:13.590 --> 03:17.160
하나씩 나열해 반환하세요

03:17.160 --> 03:20.490
실제 예제를 보면 더 이해가 잘 될 거예요

03:20.490 --> 03:26.580
get Links 사용자 프롬프트라고 하죠 편집기로 넘기겠습니다 편집기 전처럼요

03:26.580 --> 03:27.510
이 위에 있는 건가요?

03:27.510 --> 03:29.520
이 링크들을 살펴볼 거예요

03:29.520 --> 03:32.100
이 사용자 프롬프트가 어떻게 생겼는지 보죠

03:32.130 --> 03:34.800
Get in을 실행해 보세요 감을 잡아야죠

03:34.800 --> 03:36.930
사용자 프롬프트는 이렇게 생겼을 거예요

03:36.960 --> 03:40.020
제가 한 말을 그대로 전해서 죄송해요

03:40.110 --> 03:45.270
우리가 이 웹사이트를 보고 있다고 나와요

03:45.540 --> 03:47.430
여기 링크가 있어요

03:47.430 --> 03:55.080
어떤 것은 관련 있을 수 있으니 요약해서 관련 있는 것을 선택해야 하죠

03:55.680 --> 03:56.580
네

03:56.610 --> 04:01.920
이제 이 모든 걸 함수에 넣을 겁니다 OpenAI라고 하죠

04:01.920 --> 04:04.890
get links URL이네요

04:04.890 --> 04:08.430
URL을 위한 새 웹사이트 객체를 생성할게요

04:09.120 --> 04:11.130
이제 이걸 이렇게 불러요

04:11.130 --> 04:15.930
지난번에 비트를 빠르게 훑어봤는데요 이번에는 여기에 시간을 좀 더 투자할 거예요

04:15.930 --> 04:23.670
OpenAI 채팅이라고 부르는데 채팅 완료를 위한 메인 API죠 거의 항상 사용하게 될

04:23.670 --> 04:24.330
거예요

04:24.330 --> 04:31.560
API, 여러분의 작업이 계속되는 표준 API입니다 이 대화를

04:31.590 --> 04:33.720
완료하는 거죠

04:33.720 --> 04:42.690
완료 API 상에서 뭔가를 생성하면 전처럼 모델과 전달할 모델에 메시지가 생겨요

04:42.690 --> 04:43.410
그게 변수였어요

04:43.410 --> 04:46.350
GPT 4 미니를 출발선에 세팅했어요

04:46.410 --> 04:47.820
메시지예요

04:47.820 --> 04:51.120
벌써 익숙해지기 시작했길 바라요

04:51.120 --> 04:56.370
메시지 형식은 사전 목록이에요

04:56.400 --> 05:02.700
각 사전, 각 사전은 시스템 또는 사용자와 관련된 핵심 역할과 관련된

05:02.700 --> 05:08.670
시스템 메시지나 사용자 메시지의 핵심 콘텐츠를 갖고 있죠

05:08.670 --> 05:09.270
그래서요?

05:09.270 --> 05:11.600
시스템 메시지 사용자를 입력하세요

05:11.630 --> 05:15.890
메시지 목록에 들어갈 사용자 메시지요

05:15.890 --> 05:17.360
아주 간단해요

05:17.360 --> 05:20.300
충분히 이해하셨길 바라요

05:20.330 --> 05:28.010
작은 추가 디테일이 하나 더 있어요 여기 응답 포맷이요

05:28.100 --> 05:34.970
OpenAI에 JSON 개체를 다시 제공하라고 할 수 있어요

05:34.970 --> 05:39.500
JSON 형식 객체를 통해 전달하죠

05:39.500 --> 05:44.870
그건 사실 클로드는 JSON 객체를 돌려받는 방법이

05:44.900 --> 05:45.800
없어요

05:45.890 --> 05:46.940
오픈아이는 알아요

05:46.940 --> 05:53.120
OpenAI는 문서화에서 언급하길 이걸 사용할 때도 JSON 응답이 필요하다고

05:53.120 --> 05:56.570
반드시 언급해야 한다고 했어요

05:56.570 --> 06:00.950
프롬프트에 명시적으로 언급해야 작동할 거예요

06:01.700 --> 06:03.620
그렇게 하죠

06:03.650 --> 06:06.440
돌아오는 건 이 변수 완료죠

06:06.440 --> 06:11.180
사실 일관성을 유지하기 위해 이걸 응답으로 바꾸겠습니다 지난 번에

06:11.180 --> 06:12.770
그렇게 불렀거든요

06:14.540 --> 06:15.410
됐어요

06:15.590 --> 06:24.080
최종 답변을 얻기 위해서는 응답 .선택을 선택하세요. get

06:24.080 --> 06:25.490
무슨 일이죠?

06:25.490 --> 06:32.540
실제로 API 요청에서 여러 변형을 요청할 수 있어요 여러 가지 가능한

06:32.570 --> 06:36.890
변형을 생성하길 원하는 경우에요

06:36.890 --> 06:37.970
우린 그러지 않았죠

06:37.970 --> 06:39.680
Get in get은 하나네요

06:39.740 --> 06:43.250
그런 변형이 이런 선택 형태로 나타난 거죠

06:43.250 --> 06:44.840
하지만 하나밖에 없어요

06:44.840 --> 06:50.000
0번 선택은 유일한 응답을 받게 해주죠

06:50.000 --> 06:57.380
그래서 항상 응답이 .선택 .0,Message.content인 거죠 텍스트 메시지가 되돌아오는

06:57.380 --> 07:00.050
것으로 드릴다운하는 거예요

07:00.050 --> 07:05.870
기본적으로 이 두 가지에 아주 익숙해지게 됩니다 API 호출은 많은 경우에

07:05.870 --> 07:06.680
같거든요

07:06.710 --> 07:12.410
OpenAI.챗, .완성, .생성 그리고 응답 .선택,

07:12.410 --> 07:16.840
0 메시지 콘텐츠도 똑같이 할 거예요

07:17.380 --> 07:21.370
Get it, get it, get it get it, get it it, it 자면서도 외울 수 있는 수준까지 가셔야 해요

07:21.700 --> 07:29.200
그런 다음 돌아온 것으로 Json을 사용하죠 문자열 함수를 불러와 JSON으로

07:29.200 --> 07:31.150
불러오죠

07:31.180 --> 07:32.710
실행해 보죠

07:32.980 --> 07:33.910
네

07:33.910 --> 07:35.290
그래서 과감하게 도전했죠

07:35.290 --> 07:40.210
그걸 함수라고 부르고 웹사이트 anthropiccom에 넘길 거예요

07:40.210 --> 07:41.770
그럼 어떻게 되는 거죠?

07:41.800 --> 07:50.950
해당 페이지의 모든 링크를 수집한 다음 GPT for 미니에 호출해 관련 있다고

07:50.950 --> 07:57.460
생각되는 링크를 선택해 응답하라고 하는 거죠

07:57.460 --> 07:58.990
get get을 해 보죠

07:59.020 --> 07:59.890
시작할게요

08:01.210 --> 08:02.860
오픈아이로 출발하네요

08:02.890 --> 08:06.550
인류 문명의 페이지를 수집해서 돌려줘야 해요

08:06.550 --> 08:09.910
이게 Get in get page죠

08:09.910 --> 08:17.080
링크가 있어요 경력 페이지, 팀 페이지 리서치 엔터프라이즈 가격, API 그리고

08:17.080 --> 08:17.980
뉴스요

08:17.980 --> 08:18.760
어때요?

08:18.760 --> 08:24.610
모두 브로슈어에 실어야 할 훌륭한 정보예요 포함되지 않은 링크가

08:24.610 --> 08:26.380
엄청나게 많죠

08:26.380 --> 08:28.270
우리 스스로를 설득해 보죠

08:28.270 --> 08:37.330
앤스로픽 이즈 웹사이트라고 하고 전달할 수 있어요

08:39.700 --> 08:47.500
종족유사 닷 링크라고 입력하면∙∙∙ 이 페이지에 링크가 다 뭐죠?

08:47.500 --> 08:48.310
전부 다 그래요

08:48.340 --> 08:52.360
지원하는 나라가 정말 많네요

08:52.360 --> 08:58.690
또한 많은 경우 완전한 URL이 아닌 것도 보이실 겁니다 호스트 이름을 포함해서요

08:58.690 --> 09:06.970
GPT for 미니에 대한 호출이 정규화된 하위 집합을 잘 선택해 무엇인지 설명하는

09:06.970 --> 09:09.490
걸 보실 수 있어요

09:10.060 --> 09:11.470
좋은 결과라고 생각해요

09:11.470 --> 09:16.480
아주 쉬웠어요 회사 브로슈어를 만들 때 거쳐야 하는 두 단계 중

09:16.480 --> 09:17.380
하나였죠

09:17.380 --> 09:19.900
그럼 다음 2단계 영상에서 만나요

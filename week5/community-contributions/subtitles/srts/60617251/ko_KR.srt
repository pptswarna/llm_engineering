WEBVTT

00:00.050 --> 00:02.180
당연히 축하해야죠

00:02.210 --> 00:06.380
어제는 이 코스에서 엄청난 첫날을 보냈고 그걸 해냈죠

00:06.380 --> 00:09.560
환경만 설정하면 바로 레이스가 시작되죠

00:09.560 --> 00:14.840
복습해보면, 이제 할 수 있는 건 llama를 이용해 로컬 모델을 실행하는 거죠

00:14.840 --> 00:18.410
OpenAI API를 통해 개척자 모델을 실행할 수 있죠

00:18.410 --> 00:22.130
적어도 상위 레벨에서는 시스템과 사용자 프롬프트의 차이를 이해하죠

00:22.130 --> 00:28.730
요약 사용 사례를 구축했는데 중요한 상업적 응용 프로그램이죠

00:29.120 --> 00:35.270
오늘은 LLM 엔지니어가 되기 위해 어떤 단계를 거쳐야 하는지 얘기해 보겠습니다 성공을 위한

00:35.270 --> 00:39.110
준비 과정과 비트를 이용한 모델에 대해 더 얘기해 보죠

00:39.110 --> 00:41.030
그게 계획이에요

00:41.060 --> 00:47.750
먼저 강조하고 싶은 건 이 8주 과정의 실용성이에요

00:47.750 --> 00:50.480
가장 먼저 이론에 대해 배울 거예요

00:50.510 --> 00:53.420
여러분이 필요한 기본 정보를 다룰 거예요

00:53.420 --> 00:56.600
하지만 실용적인 맥락에서 할 거예요

00:56.630 --> 00:59.810
전 실전이야말로 최고의 배움이라고 믿어요

00:59.810 --> 01:01.640
그게 우리가 할 일이죠

01:01.820 --> 01:03.620
좋은 일에 쓸 거예요

01:03.620 --> 01:06.620
상업 프로젝트를 진행할 거예요

01:06.620 --> 01:11.390
여기서 배운 것을 본업에 어떻게 적용할지 생각해 보라고 할

01:11.390 --> 01:15.710
때가 많아요 그걸 구현할 시제품을 만들어 보세요

01:15.710 --> 01:18.470
이게 이 코스의 맛이에요

01:18.950 --> 01:24.740
LM 엔지니어링에는 세 가지 다른 양상이 있습니다 진행하면서 알게 되실 텐데요

01:24.770 --> 01:29.960
첫 번째는 모델을 이해하는 겁니다 다양한 유형의 광범위한 LM과

01:29.990 --> 01:34.610
어떤 게 가능한지를요 오픈 소스 버전이든 폐쇄 소스 유료 버전이든

01:34.610 --> 01:40.220
이미지나 오디오를 생성할 수 있는 다중 모듈인 것이든 LMS의 다양한

01:40.220 --> 01:46.610
아키텍처든 가장 먼저 어떤 LM을 어떻게 선택해야 하는지를요

01:46.610 --> 01:53.270
모든 툴을 살펴볼 겁니다 안아주는 얼굴이라든지 랑게인

01:53.270 --> 01:58.490
접착 코드도 있고 멋진 그라디오도 있죠

01:58.520 --> 02:01.130
전 무게와 편견을 좋아해요

02:01.130 --> 02:05.270
생산으로 배포하는 데 큰 도움이 되죠

02:05.270 --> 02:10.790
다양한 기술을 적용할 수 있는 방법을 살펴볼 거예요

02:10.880 --> 02:18.590
인공지능 분야는 API 래그를 이용해 비즈니스 문제를 해결합니다 API는 뜨거운 주제죠 미세

02:18.590 --> 02:23.360
조정하고 최종적으로는 에이전트식 AI 솔루션이죠

02:24.830 --> 02:30.170
이 코스는 여러분의 경험 수준에 상관없이 적용될 수 있도록

02:30.170 --> 02:31.400
계획했어요

02:31.640 --> 02:37.130
처음 몇 주는 너무 단순하다고 느끼실 겁니다 처음 며칠은요

02:37.130 --> 02:42.980
여기서 잠깐 기다리세요 기본 정보를 강화하는 방법으로 사용하세요

02:42.980 --> 02:47.570
토큰 같은 것에 대해 좀 더 자세히 얘기할 테니까요

02:47.570 --> 02:52.730
배울 게 많겠지만 재빨리 훑어보고 자신의 프로젝트로 만들 수 있어요

02:52.730 --> 02:59.600
그러니 이 경험을 토대로 더 심오한 버전을 만들고 앞으로 있을 더 어렵고 재밌는 프로젝트를

02:59.600 --> 03:00.980
준비하세요

03:01.190 --> 03:05.510
너무 힘들면 걱정하지 마세요

03:05.540 --> 03:07.910
실용적인 건 천천히 공부하세요

03:07.940 --> 03:09.860
천천히 연습하세요

03:09.860 --> 03:11.210
잘 헤쳐나가세요

03:11.210 --> 03:15.650
첫째 주에 더 자세히 알려드릴 가이드도 있어요 더 탄탄한 기반을 마련해

03:15.650 --> 03:16.790
줄 거예요

03:16.790 --> 03:19.550
제발, 제발 도움을 청해 주세요

03:19.550 --> 03:21.620
난 신속하게 대응해요

03:21.620 --> 03:27.290
언제든 제게 연락하세요 플랫폼이나 이메일 또는 링크드인을 통해서요

03:27.320 --> 03:29.180
깃허브 압류에 자세한 내용이 있어요

03:29.180 --> 03:30.290
내게 연락해요

03:30.320 --> 03:31.130
Get it, get it, 도움 요청해요

03:31.130 --> 03:32.600
그래서 제가 온 거예요

03:32.900 --> 03:35.810
느낌이 괜찮으면 더 좋고요

03:35.810 --> 03:36.770
계속해요

03:37.580 --> 03:43.880
필수 조건은 초보자에서 중급 레벨 파이썬 을 지원하는 것인데요

03:43.880 --> 03:49.370
중간 레벨의 파이썬 을 가지고 있다면 가장 쉽게 찾을 수 있고 가장 많은 것을 얻을 수

03:49.370 --> 03:50.060
있어요.

03:50.180 --> 03:55.910
예를 들어 여기 이 코드 줄을 보시면 함수 내부의 무작위 선이죠

03:55.910 --> 04:01.280
그게 뭘 하는 건지 안다면 아주 좋은 겁니다 그게 정확히 뭘 하는

04:01.280 --> 04:07.250
건지 알고 그 이유를 안다면 최적의 방법은 아닐 수도 있어요 그럼 그 이상인

04:07.250 --> 04:12.260
거죠 고급으로 설정할 겁니다 이게 뭘 하는지 모르고 yild이나

04:12.290 --> 04:19.910
set이나 .get 같은 단어가 익숙하지 않다면 특별한 공책이 있어요 첫 주에 Jupyter

04:19.910 --> 04:28.490
랩을 특별히 보여드리는 거죠 이 레벨에서 파이썬에 대한 가이드예요

04:28.490 --> 04:33.890
여러분이 그 노트를 보는 동안 저는 디딤돌을 하나씩 짚어 나가며 이런 선이 말이 되는

04:33.890 --> 04:36.620
지점을 찾을 거예요. Get it.

04:36.620 --> 04:40.550
물론 챗GPT와 클로드도 사용할 수 있어요

04:40.580 --> 04:45.320
지니는 코드를 정말 잘 설명해요

04:45.320 --> 04:49.310
실제로 이런 걸 넣으면 어떤 작용을 하는지 그 이유를 설명하고

04:49.310 --> 04:50.780
설명해주죠

04:50.780 --> 04:54.200
제 노트만큼이나 잘 썼을 거예요

04:54.200 --> 04:57.050
어느 쪽이든 필요한 건 다 얻었어요

04:57.050 --> 05:01.640
그리고 언제든 어떤 코드를 이해 못 하겠으면 챗GPT를 이용하세요

05:03.230 --> 05:08.630
이 코스를 최대한 활용하기 위해 몇 가지 물어볼게요. Get it.

05:08.660 --> 05:12.410
먼저, 제가 코딩하는 걸 잘 따라오세요

05:12.410 --> 05:16.640
랩에서 셀을 실행할 때 동시에 또는 나중에

05:16.670 --> 05:18.890
직접 할 수 있죠

05:18.890 --> 05:25.640
여러 이유로 스내퍼스를 누르면 그 이유를 알아내려고 노력하세요

05:25.670 --> 05:26.540
디버깅을 하죠

05:26.540 --> 05:33.380
학습하고 연습을 완료하는 훌륭한 방법이죠 코드 예제를 깃허브에 올리는 거예요

05:33.380 --> 05:34.670
사실 좋은 방법이에요

05:34.670 --> 05:39.770
이 분야에 처음 들어왔고 이 분야에서 쌓은 경험을 자랑하려고 이력서를

05:39.770 --> 05:45.290
작성하고 싶다면 깃허브 리포토가 가장 좋습니다 사람들이 그걸 보고 여러분이

05:45.290 --> 05:48.380
작업한 걸 볼 테니까요

05:48.380 --> 05:51.170
물론 우리가 하는 것과 똑같은 것을 Put 하면 안 되죠

05:51.200 --> 05:52.910
자신의 것으로 만들고 싶죠

05:52.910 --> 05:57.800
이걸 어떻게 비즈니스 영역이나 작업 중인 개인 프로젝트에 적용할 수 있는지

05:57.800 --> 06:01.160
알아내야 하죠 유사하거나 약간 다른 것으로요

06:01.190 --> 06:03.950
새 사업 가치를 위해서요

06:04.010 --> 06:10.760
이 코스에서 가장 많은 걸 얻을 수 있는 방법이죠 코드를 공유하도록 하세요 get it

06:10.760 --> 06:13.130
본인 마음에 들면 그걸로 된 거예요

06:13.130 --> 06:18.140
끌어오기 요청을 어떻게 제출할지 지침이 있어요 코드를 볼 수 있다는 뜻이죠

06:18.170 --> 06:23.660
원하시면 피드백을 드릴 수도 있고 다시 게시할 수도 있습니다 이 과정을 듣는 다른

06:23.660 --> 06:27.590
학생들이 여러분의 예를 보고 함께 공유할 수 있도록요

06:27.590 --> 06:29.540
물론 계속 노력해야죠

06:29.570 --> 06:30.950
조금만 참아요

06:30.980 --> 06:34.550
이 코스는 점점 더 좋아져요

06:34.550 --> 06:39.440
앞으로 많은 프로젝트와 상업적 응용 프로그램이 있을 거예요

06:39.440 --> 06:43.550
코스를 지키라고 응원할게요

06:43.580 --> 06:48.410
한 가지 더 말씀드리자면 MTB를 최대한 활용해야 해요 TMI, TMI, MTB F1

06:48.410 --> 06:52.220
그리고 제가 도울 일이 있으면 언제든 연락 주세요

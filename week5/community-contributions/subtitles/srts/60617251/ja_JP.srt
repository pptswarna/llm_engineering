WEBVTT

00:00.050 --> 00:02.180
おめでとうございます｡ 

00:02.210 --> 00:06.380
昨日はこのコースの初日としては非常に大きなものだったが､ 君はそれを乗り切った｡ 

00:06.380 --> 00:09.560
環境を整えれば､ レースが始まる｡ 

00:09.560 --> 00:14.840
つまり､ 今できることは､ ラマを使ってローカルでモデルを走らせることだ｡ 

00:14.840 --> 00:18.410
OpenAIのAPIを呼び出して､ フロンティアモデルを実行することができる｡ 

00:18.410 --> 00:22.130
システムプロンプトとユーザープロンプトの違いを､ 少なくとも高いレベルで理解している｡ 

00:22.130 --> 00:28.730
そして､ あなたは重要な商用アプリケーションである要約のユースケースを構築した｡ 

00:29.120 --> 00:39.110
今日は､ LLMエンジニアになるためのステップ､ 成功のための準備､ そしてフロンティア・モデルについて少しお話しします｡

00:39.110 --> 00:41.030
それが計画だ｡ 

00:41.060 --> 00:47.750
さて､ まず強調しておきたいのは､ この8週間のコースは実践的なものだということだ｡ 

00:47.750 --> 00:50.480
まず第一に､ 我々は理論をカバーするつもりだ｡ 

00:50.510 --> 00:53.420
必要な基礎情報をカバーするつもりだ｡ 

00:53.420 --> 00:56.600
しかし､ 我々は常に実践的な文脈でそれを行うつもりだ｡ 

00:56.630 --> 00:59.810
私は､ 学ぶ最善の方法は実践することだと信じている｡ 

00:59.810 --> 01:01.640
そして､ それが私たちが実際にやることだ｡ 

01:01.820 --> 01:03.620
そして､ それを有効に使うつもりだ｡ 

01:03.620 --> 01:06.620
私たちは､ これから商業プロジェクトを立ち上げていく｡ 

01:06.620 --> 01:11.390
そして､ 学んだことを本業にどう生かせるかを考え､ それを実現するための小さなプロトタイプを作ってみるよう､

01:11.390 --> 01:15.710
よくお願いしている｡

01:15.710 --> 01:18.470
それがこのコースの特徴だ｡ 

01:18.950 --> 01:24.740
LMエンジニアリングには3つの異なる側面があり､ それをこれから学んでいくことになる｡ 

01:24.770 --> 01:29.960
オープンソースのもの､ クローズドソースの有料版､ 画像や音声を生成できるマルチモーダルなもの､

01:29.990 --> 01:34.610
LMSのさまざまなアーキテクチャ､ そして重要なのは､

01:34.610 --> 01:46.610
そもそもどのLMSを使うべきかをどのように選択するかということだ｡

01:46.610 --> 01:53.270
私たちは､ ユビキタスなハグ顔､ ランゲ・チェーンの超印象的なグルー・コード､ 皆さんが目にする素晴らしいグラディオなど､

01:53.270 --> 01:58.490
あらゆる商売道具を見ていきます｡

01:58.520 --> 02:01.130
私はウェイトとバイアスの大ファンだ｡ 

02:01.130 --> 02:05.270
超便利で､ 本番環境にデプロイするためのモーダルがある｡ 

02:05.270 --> 02:10.790
このテクニックを応用するさまざまな方法を見ていこう｡ 

02:10.880 --> 02:18.590
APIのラグを利用したビジネス上の問題を解決するAIの分野は､ 非常にホットなトピックであり､ ファインチューニングを経て､

02:18.590 --> 02:23.360
最終的には完全なAgentic AIソリューションとなる｡

02:24.830 --> 02:31.400
このコースのアイデアは､ あなたの経験レベルにほとんど関係なく応用できるように計画したということだ｡

02:31.640 --> 02:37.130
最初の数週間は､ あるいは少なくとも最初の数日間は､ 自分にとって単純すぎると感じるかもしれない｡

02:37.130 --> 02:47.570
トークンのようなものについては､ これまでよりももう少し詳しくお話しします｡

02:47.570 --> 02:52.730
だから､ 手に取るべきものはあるだろうけど､ すぐに読み終えて､ 自分のプロジェクトにすることができる｡

02:52.730 --> 03:00.980
だから､ 私たちがやっていることのより深いバージョンを構築するための方法として､ そして後に控えている､ より困難で楽しいプロジェクトに備えるための方法として使ってほしい｡

03:01.190 --> 03:05.510
もし難しすぎると感じたら､ どうか心配しないでほしい｡ 

03:05.540 --> 03:07.910
実技はゆっくりと｡ 

03:07.940 --> 03:09.860
エクササイズはじっくりと｡ 

03:09.860 --> 03:11.210
それをやり遂げることだ｡ 

03:11.210 --> 03:16.790
もし必要であれば､ 第1週でお話しするような､ 足場を固めるのに役立つ追加ガイドもある｡

03:16.790 --> 03:19.550
そして､ どうか､ どうか､ 助けを求めてほしい｡ 

03:19.550 --> 03:21.620
私はここにいる｡ 

03:21.620 --> 03:27.290
プラットフォームやEメール､ LinkedInを通じて､ いつでも私に連絡を取ることができる｡ 

03:27.320 --> 03:29.180
詳細はGitHubのレポにある｡ 

03:29.180 --> 03:30.290
私に声をかけてください｡ 

03:30.320 --> 03:31.130
助けを求める｡ 

03:31.130 --> 03:32.600
そのために私はここにいる｡ 

03:32.900 --> 03:35.810
そして､ もしそれがちょうどいいと感じたら､ 素晴らしいことだ｡ 

03:35.810 --> 03:36.770
続けてくれ｡ 

03:37.580 --> 03:43.880
だから､ 前提条件は初級から中級レベルのPythonだ｡ 

03:43.880 --> 03:50.060
中級レベルのPythonを持っている人なら､ 最も簡単で､ 最大限に活用できるだろう｡

03:50.180 --> 03:55.910
例えば､ このコードの行を見てほしい｡

03:55.910 --> 04:01.280
もしこれが何をやっているのかよく分かっていて､ なぜそれが最適なやり方ではないのかも分かっているなら､

04:01.280 --> 04:19.910
あなたは上級者です｡ もしこれが何をやっているのか分からなくて､ yieldやsetやgetのような単語のある世界に馴染みがないのなら､ 第1週目に特別なノートブック､ 特別なJupyter

04:19.910 --> 04:28.490
Labがあります｡

04:28.490 --> 04:36.620
そのノートを見ながら､ このような線が意味を持つようになるまで､ それぞれの足がかりをたどっていこう｡

04:36.620 --> 04:40.550
もちろん､ ChatGPTやクロードを使うこともできる｡ 

04:40.580 --> 04:45.320
精霊たちはコードを説明するのが本当にうまい｡ 

04:45.320 --> 04:50.780
そして実際､ もしこのようなものを入れたら､ 彼らはそれが何をするのか､ なぜそうするのかを正確に教えてくれるだろう｡

04:50.780 --> 04:54.200
そして､ おそらく私のノートと同じくらい良いものだ｡ 

04:54.200 --> 04:57.050
いずれにせよ､ これで必要なことはわかったはずだ｡ 

04:57.050 --> 05:01.640
また､ わからないコードがあれば､ いつでもChatGPTを使うことができます｡ 

05:03.230 --> 05:08.630
そこで､ このコースを最大限に活用するために､ いくつかお願いしたいことがある｡ 

05:08.660 --> 05:12.410
まずは､ 私のコーディングにお付き合いください｡ 

05:12.410 --> 05:16.640
だから､ 私がラボで細胞を処理するとき､ 同時に､ あるいはその後に､

05:16.670 --> 05:18.890
自分で処理するんだ｡

05:18.890 --> 05:25.640
そして､ さまざまな理由でうまくいかないことがあったら､ その原因を突き止めよう｡

05:25.670 --> 05:26.540
デバッグをしよう｡ 

05:26.540 --> 05:33.380
GitHubにコード例をアップするのもいい方法だ｡ 

05:33.380 --> 05:34.670
実際､ それも素晴らしい方法だ｡ 

05:34.670 --> 05:39.770
もしあなたがこの仕事を始めたばかりで､ この経験を積み重ねてきたことを示すために履歴書のようなものを作ろうとしているなら､

05:39.770 --> 05:48.380
GitHubのレポが最高の履歴書となるでしょう｡

05:48.380 --> 05:51.170
そしてもちろん､ 私たちのようなプロジェクトにぴったりと当てはまるものを入れたくはないだろう｡ 

05:51.200 --> 05:52.910
自分のものにしたいのだろう｡ 

05:52.910 --> 06:01.160
自分のビジネス分野や個人的に取り組んでいるプロジェクトにこれを適用して､ 似ているようで少し違うものにするにはどうしたらいいか？

06:01.190 --> 06:03.950
新たなビジネス価値を生み出すために｡ 

06:04.010 --> 06:10.760
このコースを最大限に活用し､ コードを共有するための素晴らしい方法だ｡ 

06:10.760 --> 06:13.130
あなたがそれで満足し､ あなたがそれでいいのなら｡ 

06:13.130 --> 06:18.140
プルリクエストを提出する方法を説明しました｡ 

06:18.170 --> 06:23.660
また､ 他の受講生があなたの例を見ることができるように､

06:23.660 --> 06:27.590
再公開することもできます｡

06:27.590 --> 06:29.540
そしてもちろん､ それを貫く｡ 

06:29.570 --> 06:30.950
頑張るんだ｡ 

06:30.980 --> 06:34.550
このコースはどんどん良くなっていくよ｡ 

06:34.550 --> 06:39.440
多くのプロジェクトがあり､ 多くの商業的応用がある｡ 

06:39.440 --> 06:43.550
そして､ 私は間違いなくあなたがこの道を進むことを勧める｡ 

06:43.580 --> 06:48.410
そして､ もう1度ここに書かなかったことは､ コースを最大限に活用することだ｡ 

06:48.410 --> 06:52.220
また､ 何かお手伝いできることがあれば､ 声をかけてください｡ 

WEBVTT

00:00.440 --> 00:07.280
次に進む前に､ この素晴らしいスライドをもう一度お見せしよう｡ このスライドでは､ シンプルな3つの抽象化と､

00:07.310 --> 00:13.130
抽象化されたパイプラインを構築するための1つのメソッド呼び出しについて説明している｡

00:13.160 --> 00:16.190
繰り返すが､ LMを作るのも､ 記憶を作るのも自分だ｡ 

00:16.220 --> 00:20.690
クロマ・ベクター・ストアや､ あなたが使っているベクター・ストアのドットをretrieverとして呼び出すだけで､

00:20.690 --> 00:22.520
retrieverを作成できます｡

00:22.520 --> 00:30.770
そして､ この1行をLM､ リトリーバー､ メモリーに渡すだけで､ 会話の検索チェーンを作ることができる｡

00:30.770 --> 00:36.080
もちろん､ この会話チェーンでは､

00:36.080 --> 00:46.010
invokeを呼び出し､ 質問と一緒に辞書を渡す｡

00:46.340 --> 00:51.770
そうすれば､ あなたのスキルはレベルアップしたと言える｡ 

00:51.770 --> 00:53.540
あなたはスキルアップしている｡ 

00:53.540 --> 00:59.030
これであなたは､ ラグ・パイプラインを構築する術を会得したことになる｡ 

00:59.030 --> 01:00.380
おめでとう！

01:00.740 --> 01:06.170
エンデュアー・エルムのような架空の企業だけでなく､ できれば実在の企業（ランプチェーンを使っている自分の会社も含む）でも､

01:06.170 --> 01:11.060
自分のボロ知識労働者を作ることができる｡

01:11.060 --> 01:12.200
クロマも使える｡ 

01:12.230 --> 01:23.480
また､ 他のベクターデータストアや､ OpenAI以外のモデルを使用する場合にも､ ラングチェーンを使用すれば非常に簡単に切り替えることができます｡

01:23.570 --> 01:31.100
次回はラングチェーン宣言言語について簡単に話すつもりだ｡

01:31.130 --> 01:32.900
だから､ 使いたければ使えばいい｡ 

01:33.200 --> 01:38.390
ラング・チェインがどのように機能するのか､ もう少しお話ししましょう｡ 

01:38.390 --> 01:45.770
特に､ ラグのよくある問題を見て､ それを診断し､ 修正する方法について話すつもりだ｡

01:45.770 --> 01:54.950
そうすれば､ ボロ布の内部構造を理解し､ プロダクション・プロジェクトで怒りに任せてボロ布を使うことができるようになるだろう｡

01:55.040 --> 01:57.200
それでは､ また次回お会いしましょう｡ 

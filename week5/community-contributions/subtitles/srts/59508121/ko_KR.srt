WEBVTT

00:00.920 --> 00:02.300
드디어 때가 왔어요

00:02.300 --> 00:03.230
시작할게요

00:03.260 --> 00:04.790
잘 조정하고 있어요

00:04.790 --> 00:05.810
세세한 조율을 하죠

00:06.020 --> 00:06.740
기차요

00:06.770 --> 00:10.130
작업이 끝나면 허브에 넣는 라인도 있어요

00:10.160 --> 00:11.750
시작해 보죠

00:13.130 --> 00:16.910
시작되는 동안 잠깐 살펴보죠

00:16.940 --> 00:22.340
GPU 시작점이 6점이에요 예상 수치죠

00:22.370 --> 00:27.560
모델 자체에 필요한 건 다 있어요

00:28.550 --> 00:37.490
그걸 하는 동안 몸을 데우면서 훈련을 준비하죠

00:37.640 --> 00:42.170
기다리고 있으니 다른 훈련 매개 변수들에 대해 얘기할게요

00:42.170 --> 00:46.130
전에 언급하지 않은 것들이죠

00:46.610 --> 00:48.230
평가 전략요

00:48.230 --> 00:55.460
이런 종류의 훈련을 할 때 전형적으로 지속적으로 데이터 세트를 갖고 평가할

00:55.490 --> 01:01.790
겁니다 훈련에 포함되지 않은 상수 집합으로 사용할 거예요 모델이

01:01.790 --> 01:07.670
진전을 이루고 있는지 유효성을 검사하기 위해 사용하겠죠

01:07.700 --> 01:09.800
여기선 안 해봤어요

01:09.890 --> 01:15.790
훈련 데이터가 너무 많아서 훈련할 게 많은 것 같아요

01:15.850 --> 01:22.300
한 시대에서만요 그리고 공연 때문이기도 하지만 훈련 속도가 정말 중요했어요

01:22.300 --> 01:26.590
이걸 통해 반복적으로 유효성 검증을 하는 걸 멈추고 싶지 않았어요

01:26.590 --> 01:29.710
유효성 검증 데이터 모음이 최선의 관행이죠

01:29.740 --> 01:31.600
데이터는 충분히 있어요

01:31.630 --> 01:39.970
2,000개의 테스트 데이터 포인트를 개최해서 그중 다수를 사용할 수 있습니다 유효성 검사

01:39.970 --> 01:42.490
단계인 테스트 세트로요

01:42.490 --> 01:50.260
개선점을 찾자면 최선의 관행은 평가 전략을 활용해서 훈련 데이터와 함께 유효성

01:50.260 --> 01:53.620
검증 데이터를 통과하는 거죠

01:53.770 --> 01:58.840
하지만 이 경우에는 꼭 필요한 건 아니라서 안 했어요

01:59.650 --> 02:01.600
네

02:01.600 --> 02:07.690
이 쪽으로 보면 GPU 메모리가 40GB 밖으로 나왔고 제가 가진

02:07.690 --> 02:15.280
GPU 메모리에선 38GB가 나왔죠 현재 2를 사용하고 있어요

02:15.280 --> 02:23.710
16개의 배치 단계가 있고 배치 사이즈는 16입니다 GPU 전체를 거의 다

02:23.710 --> 02:31.270
사용하게 됩니다 실행되는 것과 비슷합니다 여기에서 일어나는 일을

02:31.270 --> 02:32.890
볼 수 있죠

02:32.890 --> 02:36.520
스크롤을 내려서 뭐가 보이는지 보죠

02:36.880 --> 02:42.850
작동 중이고 어떻게 되는지 볼 수 있어요

02:42.940 --> 02:51.100
이제 세 개 개국을 다스리는 데 24시간 정도 걸릴

02:51.160 --> 02:53.140
거예요

02:53.170 --> 02:55.390
26시간 정도요

02:55.450 --> 03:04.120
개혁기마다 8시간 정도 작업합니다 이 육중한 기체도 마찬가지입니다 훈련 데이터가

03:04.150 --> 03:10.240
방대하긴 하지만 400,000개의 훈련 데이터를 전부

03:10.240 --> 03:13.210
검토할 필요는 없거든요

03:13.210 --> 03:18.310
말씀드렸듯이 훨씬 낮은 버전의 박스에서 실행할 수 있고 한동안 실행하게 둘 수도 있어요

03:18.310 --> 03:19.750
그건 다 괜찮아요

03:20.080 --> 03:26.710
하지만 여기서 보시는 건 50단계마다 달라요 우리가 구성한 대로요

03:26.740 --> 03:31.450
지금까지의 훈련 손실을 보여주는 결과가 나오고 있어요

03:31.660 --> 03:36.940
지금은 무게와 편향성을 측정하고 있어요

03:37.060 --> 03:41.350
다음 영상에서는 어떻게 생겼는지 살짝 보여드릴게요

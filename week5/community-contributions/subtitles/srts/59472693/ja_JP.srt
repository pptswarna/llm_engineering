WEBVTT

00:01.760 --> 00:02.480
友人だ｡ 

00:02.510 --> 00:05.390
本当に疲れ果てている｡ 

00:05.390 --> 00:09.620
疲れきっているし､ ちょっとだけトラウマになっている｡ 

00:09.950 --> 00:13.520
そして､ その責任はあなたにもある｡ 

00:13.550 --> 00:16.760
その理由はすぐにわかるだろう｡ 

00:16.790 --> 00:21.050
その前に､ 今日の予定について話そう｡ 

00:21.500 --> 00:25.670
だから､ ベースラインのハードルを上げていくつもりだ｡ 

00:25.670 --> 00:29.360
すでにできることを思い出してほしい｡ 

00:29.390 --> 00:36.230
もちろん､ AIアシスタントを使ったフロンティアモデルの組み合わせからテキストを生成したり､ ツールを使ってコードを生成したり､

00:36.230 --> 00:44.240
抱き合わせ顔変換ライブラリを使ったオープンソースシステムもあり､ ラングチェーンを使ってラグパイプラインを構築することもできるし､

00:44.240 --> 00:51.110
今ではデータをキュレーションすることもできる｡

00:51.110 --> 00:52.700
最後に､ 言わせてもらえば｡ 

00:52.700 --> 00:57.740
また､ かなり馬鹿げたテクニックを使ってベースラインモデルを作ることもできる｡ 

00:57.740 --> 01:04.040
しかし､ 特徴工学とバッグ・オブ・ワードの両方を含む伝統的な機械学習の線形回帰を使い､

01:04.040 --> 01:14.270
さらにワード2ベクトルを使ったより高度な技術を使い､ サポートベクターマシン､ そしてランダムフォレストを加える｡

01:14.330 --> 01:16.250
かなりの旅だった｡ 

01:16.250 --> 01:17.750
だから今日も｡ 

01:17.780 --> 01:23.510
今日は､ 私たちが組み立てたフレームワークを､ フロンティア・モデルに当てはめてみよう｡ 

01:23.510 --> 01:30.080
そしてこれは､ 適切なビジネス上の問題を取り上げ､ データを理解し､ それをフロンティア・モデルに提示し､

01:30.140 --> 01:35.750
そのパフォーマンスを比較するために必要なすべてのステップを実際に捉えることになる｡

01:35.750 --> 01:41.870
だから､ 我々にとってはエキサイティングな瞬間だ｡ 

01:41.930 --> 01:46.130
それではまたJupyterLabでお会いしましょう｡ 

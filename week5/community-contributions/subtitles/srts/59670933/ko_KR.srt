WEBVTT

00:00.530 --> 00:07.670
비트를 향한 제 열정이 좀 지나치긴 했지만 결과에 아주 만족해요

00:07.700 --> 00:12.620
이런 프로젝트는 드물죠 이렇게 움직이는 부분이 많고

00:12.620 --> 00:20.240
기술적으로 꽤 복잡하고 실질적인 것도 많지만 푸시 알림처럼 단순하고 실질적인

00:20.240 --> 00:22.340
결과를 얻었어요

00:22.520 --> 00:29.750
통지의 제왕 이상의 뭔가가 이 영화를 아주 만족스럽게 만들어요

00:30.290 --> 00:35.660
다만 이에 관해 한 가지 강조하고 싶은 점은 이 문제를 해결하기

00:35.660 --> 00:41.120
위해 준비한 이 템플릿은 여러분이 이미 생각해 둔 유사한

00:41.150 --> 00:46.940
사업 문제나 스타트업 아이디어 상업적 문제에 적용할 수 있다는

00:46.940 --> 00:48.680
거죠

00:48.710 --> 00:53.570
즉, 바로 떠오르는 것을 말씀드리자면 얼굴을 안는

00:53.570 --> 01:00.020
것을 볼 때 이 프로젝트 아마존 가격 데이터를 볼 때 회사들의 연간 리포트가

01:00.020 --> 01:07.670
있는 많은 데이터를 보게 되었는데요 리포트가 나온 당일과 그 후 며칠간의 주가 변화와

01:07.670 --> 01:15.420
어떻게 관련되어 있는지 보여줍니다 아주 흥미로운 데이터 집합이죠

01:15.420 --> 01:22.110
이건 좀 억지스럽긴 하지만 그걸 풀 방법을 찾는다면 더 큰 기회가

01:22.110 --> 01:23.580
되겠죠

01:23.610 --> 01:30.810
소유 모델을 구축할 방법이 있다면 그걸 살펴보고 회사의 보고서가 공개된 결과로

01:30.810 --> 01:35.130
주가가 어떻게 될지 예측할 수 있는 거죠

01:35.160 --> 01:42.630
스캐너 요원이 출시 예정인 신규 회사를 스캔하는 걸 상상해 보세요

01:42.660 --> 01:49.170
아주 유사한 에이전트 워크플로우를 보실 수 있습니다 그런 종류의 문제에 적응하는

01:49.170 --> 01:49.710
거죠

01:49.710 --> 01:54.660
물론 당신이 내리는 모든 거래 결정은 전적으로 당신 책임이고

01:54.660 --> 01:56.880
나와는 전혀 상관이 없어요

01:57.060 --> 02:03.120
물론 아직 아무도 그 문제를 해결하지 못했죠 회사 보고서를 읽고 그 결과로

02:03.120 --> 02:09.510
탄탄한 의사 결정을 내리는 자동화된 인공지능 시스템을 개발하는 거요

02:09.510 --> 02:15.810
하지만 이건 아주 심각하고 중요한 도전 같아요

02:15.810 --> 02:21.060
그걸 지적하고 싶었어요 얼마나 비슷한지 보여주거든요 퍼즐 조각

02:21.060 --> 02:24.360
같은 면에서요 그걸 원한다면 볼 수 있죠

02:24.360 --> 02:33.160
그러니 큰 도전이 될 수 있죠 다른 건 없더라도요 어떤 일이 일어나는지 흥미를 위해 그런 종류의 데이터에서 신호를

02:33.160 --> 02:38.200
찾을 수 있는지 보고 유사한 에이전트 워크플로우를 구축할 기회로

02:38.230 --> 02:40.600
활용하기 위해서요

02:41.410 --> 02:42.040
네

02:42.070 --> 02:49.930
어쨌든, 이번 주의 마지막 슬라이드로 넘어가죠 이∙∙∙ 아니, 이번 주가 아니라 오늘의

02:49.930 --> 02:54.430
슬라이드요 이제 하루 남았다는 걸 알려드리려고요

02:54.430 --> 02:59.890
8주 차, 5일 차인 마지막 날이 이 코스의 마지막 날이죠

02:59.890 --> 03:01.930
놓치면 후회하실 거예요

03:02.050 --> 03:07.210
여러분이 뭘 할지 말씀드리기 전에 상기시켜 드리자면 이 시점에서 프론티어 모델로

03:07.210 --> 03:13.510
코드와 텍스트를 생성할 수 있습니다 오픈 소스 모델로요 얼굴을 끌어안는 것과 도구를 이용한 API

03:13.510 --> 03:18.760
구조적 출력물들을 이용하죠 GRadio의 도움을 받아서요

03:18.790 --> 03:25.180
문제 해결에 사용한 전략을 따르세요 데이터 큐레이팅을 포함해서요

03:25.180 --> 03:30.280
힘들고 고된 일이지만 가장 중요한 단계죠

03:30.460 --> 03:34.330
기본 모델을 만들고 개척지 모델을 세밀하게 조정하는 거죠

03:34.330 --> 03:38.380
오픈 소스 모델을 선택하고 훈련할 수 있어요

03:38.380 --> 03:39.370
그리고 해냈죠

03:39.400 --> 03:42.010
개척지를 뛰어넘은 거죠

03:42.040 --> 03:44.770
모델을 생산에 배포할 수 있어요

03:44.770 --> 03:48.730
Modal을 이용해 클라우드에 뭔가를 놓을 수 있어요

03:48.760 --> 03:53.980
다른 방법으로 코드를 제작할 수도 있어요 프로덕션 환경에서 실행될 수

03:53.980 --> 03:55.750
있도록 준비하는 거죠

03:56.140 --> 04:03.400
기획 메모리와 데이터베이스, 그리고 여러 에이전트가 함께 복잡한 작업을 수행하는

04:03.430 --> 04:07.030
에이전트 워크플로를 구축할 수 있어요.

04:07.360 --> 04:11.470
그래서 내일을 준비하는 거예요

04:11.470 --> 04:16.780
내일은 사용자 인터페이스를 만들 겁니다 그레이디오에 있으니 아주

04:16.780 --> 04:17.920
훌륭하죠

04:18.040 --> 04:23.980
오늘 워크플로우를 실행했을 때 실행된 후 완료된 걸

04:23.980 --> 04:25.270
볼 수 있죠

04:25.270 --> 04:30.730
자동적으로 계속 작동하지 않고 매번 사람이 눌러야 하는

04:30.730 --> 04:31.330
거죠

04:31.330 --> 04:32.950
물론 그걸 고쳐야겠죠

04:32.950 --> 04:35.320
내일 둘 다 할 거예요

04:35.320 --> 04:43.270
그 과정이 끝나면 인공지능과 LM 공학에 통달한 상태가 되죠

04:43.330 --> 04:45.100
그 순간이 기다려져요

04:45.100 --> 04:49.300
기대와 자부심을 느끼시길 바라요 거기서 뵐게요
